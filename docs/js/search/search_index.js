var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["3px","ad","add","allow","angular","angular/cor","angular/form","angular/platform","anyon","applic","appmodul","aspect","auto","background","becom","bind","bootstrap","border","bound","browser","browsermodul","call","case","catch","chang","class","color","colordrag","colordrop","compodoc","configur","const","content","css","declar","demo","design","detail","direct","document","dot","drag","drop","droptargetopt","dropzonecolor","dropzonecolordrag","dropzonecolordrop","due","dure","each","event","exampl","export","file","finish","formsmodul","framework","gener","get","grey","here","https://ngx","import","includ","index","instal","licens","look","manag","match","materi","method","mit","mock","modul","more","ng(x","ngmodul","ngx","ngxdraganddrop","ngxdroptargetopt","ngxuploadmodul","ngxuploadmodule.forroot","ngxuploadmodule.forroot(uploadopt","npm","object","offer","on","ondrop","overwrit","post","present","problem","progress","properti","propos","queue","reactiveformsmodul","real","regard","result","rgba(0,0,0,0.08","rgba(0,0,0,0.12","rgba(0,0,0,0.28","servic","setup","sourc","specif","start","support","tabl","take","those","through","throw","upload","upload.github.io","upload.github.io/doc","uploadopt","uploador","uploadsetup","url","us","usag","via","view","without","wkoza/ngx","yarn","your_backend_upload_url","zone"],"overview.html":["1","3","4","6","7","9","appcompon","appmodul","bootstrap","class","cluster_appmodul","cluster_appmodule_bootstrap","cluster_appmodule_declar","cluster_appmodule_import","cluster_ngxuploadmodul","cluster_ngxuploadmodule_declar","cluster_ngxuploadmodule_export","cluster_testmodul","cluster_testmodule_declar","compon","declar","depend","direct","export","inject","interfac","legend","match","materialmodul","modul","ngxdeclar","ngxuploadmodul","out","overview","provid","reset","result","simplebootstrapcompon","simplematerialcompon","testcompon","testmodul","zoom"],"changelog.html":["07","08","09","1.0.0","111f431","20","2017","24","35ba948","51a00c9","8341a48","90053e8","98d2115","9aa2e24","add","alpha.0","alpha.1","alpha.2","alpha.3","alpha.4","alpha.5","alpha.6","alpha.7","applic","beta.0","bug","chang","changelog","commit","config","configur","d9e8c14","demo","doc","document","error","f51e23a","featur","file","fix","get","gitignor","guidelin","ie","inject","log","match","name","notabl","package.json","polyfil","project","readm","result","rout","see","standard","start","test","unit","version"],"license.html":["2017","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","koza","liabil","liabl","licens","limit","match","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","william","without"],"modules.html":["appmodul","avail","brows","browser","graph","match","materialmodul","modul","ngxuploadmodul","result","support","svg","testmodul"],"modules/AppModule.html":["angular/cor","angular/form","angular/http","angular/platform","angular/rout","app.compon","appcompon","appmodul","bootstrap","bootstrap/ng","bootstrap/simple.compon","browser","browsermodul","class","cluster_appmodul","cluster_appmodule_bootstrap","cluster_appmodule_declar","cluster_appmodule_import","compon","const","coverage/src/app/app.module.t","declar","depend","export","file","formsmodul","full","github","httpmodul","import","info","legend","match","materi","material/material.modul","material/simple.compon","materialmodul","modul","ng","ngbmodul","ngbmodule.forroot","ngmodul","ngxuploadmodul","ngxuploadmodule.forroot","out","path","pathmatch","provid","redirectto","reset","result","rout","routermodul","routermodule.forroot(rout","simpl","simplebootstrapcompon","simplematerialcompon","sourc","upload","wkoza/ngx","zoom"],"modules/MaterialModule.html":["angular/cor","angular/materi","angular/platform","browser/anim","browseranimationsmodul","class","coverage/src/app/material/material.module.t","export","file","import","info","match","materialmodul","mdbuttonmodul","mdcardmodul","mdinputmodul","mdprogressbarmodul","modul","ngmodul","result","sourc"],"modules/NgxUploadModule.html":["_consol","_loggerfactori","_loggerfactory(opt","angular/cor","associ","bootstrap","class","cluster_ngxuploadmodul","cluster_ngxuploadmodule_declar","cluster_ngxuploadmodule_export","consol","consolelogg","consolelogger(_consol","const","debug","declar","dep","depend","directives/dropzone.direct","droptargetopt","enabl","export","factori","file","fileitem","forroot(uploadopt","function","httpclientuploadservic","import","info","intern","isdevmod","legend","logger","loggeropt","match","modul","modulewithprovid","new","ngmodul","ngx_drop_target_opt","ngx_logger_opt","ngx_upload_opt","ngxdeclar","ngxdraganddropdirect","ngxdroptargetopt","ngxloggeropt","ngxuploadlogg","ngxuploadmodul","ngxuploadopt","nooplogg","null","object","option","options.debug","options.en","out","param","privat","provid","reset","result","return","services/fileitem.model","services/httpclientupload.servic","services/xhrupload.servic","sourc","src/index.t","static","true","typeof","uploadopt","uploadservic","usefactori","usevalu","utils/configuration.model","utils/logger.model","xhruploadservic","zoom"],"modules/TestModule.html":["angular/cor","bootstrap","class","cluster_testmodul","cluster_testmodule_declar","compon","declar","depend","drop","export","file","here","import","info","legend","match","modul","ngmodul","ngmodule({declar","out","provid","reset","result","sourc","templat","test/directives/test.component.t","testcompon","testmodul","upload","zoom"],"components/AppComponent.html":["actual_compon","angular/cor","app","app.component.css","app.component.html","appcompon","bootstrap","class","compon","component_templ","coverage/src/app/app.component.t","current","direct","dom","element","export","file","home","html","import","info","legend","match","materi","metadata","name","ngx","ngxdraganddrop","ngxdraganddropdirect","result","root","root'},{'nam","selector","simpl","simplebootstrapcompon","simplematerialcompon","sourc","styleurl","templat","templateurl","testcompon","tree","upload","var"],"components/SimpleBootstrapComponent.html":["0","2","action","actual_compon","add","angular/cor","app","appcompon","bootstrap","byte","cancel","class","compon","component_templ","console.log('drop","constructor","constructor(publ","constructor(upload","coverage/src/app/bootstrap/simple.component.t","coverage/src/app/bootstrap/simple.component.ts:12","coverage/src/app/bootstrap/simple.component.ts:14","coverage/src/app/bootstrap/simple.component.ts:22","coverage/src/app/bootstrap/simple.component.ts:27","data","defin","descript","direct","dom","drop","element","email","exampl","export","file","file.nam","file.s","file.typ","here","html","implement","import","index","info","inform","item(","itemfile.file.nam","itemfile.file.size/1024/1024","legend","match","mb","metadata","method","model","name","new","ngoninit","ngxdraganddrop","ngxdraganddropdirect","number:'1.0","number:\\'1.0","ondrop","ondrop(data","oninit","option","paramet","parsefil","parsefile(fil","person","person.model","progress","properti","public","queue","remov","result","return","root","root'},{'nam","selector","simpl","simple.component.css","simple.component.html","simplebootstrapcompon","simplematerialcompon","size","sourc","string","styleurl","templat","templateurl","testcompon","this.model","this.parsefile(data[0","tree","type","upload","uploader.queue.length","uploadservic","var","void","wkoza/ngx"],"components/SimpleMaterialComponent.html":["0","2","action","actual_compon","add","angular/cor","app","appcompon","byte","cancel","class","color","colordrag","colordrop","compon","component_templ","console.log('drop","constructor","constructor(publ","constructor(upload","coverage/src/app/material/simple.component.t","coverage/src/app/material/simple.component.ts:13","coverage/src/app/material/simple.component.ts:15","coverage/src/app/material/simple.component.ts:19","coverage/src/app/material/simple.component.ts:21","coverage/src/app/material/simple.component.ts:29","coverage/src/app/material/simple.component.ts:34","data","defin","descript","direct","dom","drop","droptargetopt","element","exampl","export","file","file.nam","file.s","file.typ","green","here","html","implement","import","index","info","inform","item(","itemfile.file.nam","itemfile.file.size/1024/1024","legend","match","materi","mb","metadata","method","model","name","new","ngoninit","ngxdraganddrop","ngxdraganddropdirect","number:'1.0","number:\\'1.0","ondrop","ondrop(data","oninit","option","paramet","parsefil","parsefile(fil","person","person.model","progress","properti","public","purpl","queue","remov","result","return","root","root'},{'nam","selector","simpl","simple.component.css","simple.component.html","simplebootstrapcompon","simplematerialcompon","size","sourc","string","styleurl","templat","templateurl","testcompon","this.model","this.parsefile(data[0","tree","type","upload","uploader.queue.length","uploadservic","var","void","wkoza/ngx"],"components/TestComponent.html":["actual_compon","angular/cor","app","appcompon","class","compon","component_templ","direct","dom","drop","element","export","file","here","html","import","info","legend","match","metadata","name","ngmodul","ngmodule({declar","ngxdraganddrop","ngxdraganddropdirect","result","root'},{'nam","selector","simplebootstrapcompon","simplematerialcompon","sourc","templat","test/directives/test.component.t","testcompon","testmodul","tree","upload","var"],"directives/NgxDragAndDropDirective.html":["1","abstractuploadservic","angular/cor","angular/form","argument","boolean","class","const","constructor","constructor(el","constructor(priv","copi","datatransf","defin","descript","direct","drag","dragev","dragleav","dragleave(ev","dragov","dragover(ev","drop","drop(ev","dropevent(ev","dropopt","droppedfil","droptargetopt","el","elementref","event","event.datatransf","event.originalevent.datatransf","event.preventdefault","event.stoppropag","eventemitt","export","exporta","fals","file","formbind","gettransfer(ev","havefiles(typ","hostlisten","hostlistener('dragleav","hostlistener('dragov","hostlistener('drop","implement","import","index","info","inject","inject(ngx_drop_target_opt","inject(ngx_upload_opt","injector","input","logger","match","metadata","method","name","new","ngform","ngoninit","ngx_drop_target_opt","ngx_upload_opt","ngxdraganddrop","ngxdraganddrop(dropopt","ngxdraganddropdirect","ngxuploadlogg","node","null","ondragleave(ev","ondragover(ev","ondrop","oninit","option","output","paramet","privat","properti","render","renderer2","result","return","selector","services/abstractupload.servic","set","sourc","src/directives/dropzone.directive.t","src/directives/dropzone.directive.ts:30","src/directives/dropzone.directive.ts:33","src/directives/dropzone.directive.ts:40","src/directives/dropzone.directive.ts:42","src/directives/dropzone.directive.ts:44","src/directives/dropzone.directive.ts:48","src/directives/dropzone.directive.ts:59","src/directives/dropzone.directive.ts:67","src/directives/dropzone.directive.ts:85","stopandprevent(ev","this.dropopt","this.dropoptions.color","this.dropoptions.colordrag","this.dropoptions.colordrop","this.formbind","this.formbinded.form","this.gettransfer(ev","this.havefiles(transfer.typ","this.injector.get(this.uploadoptions.httpstrategi","this.logger.debug('dragleav","this.logger.debug('dragov","this.logger.debug('drop","this.logger.debug(json.stringify(dropopt","this.logger.info('strategi","this.ondrop.next(droppedfil","this.renderer.addclass(this.el.nativeel","this.renderer.removeclass(this.el.nativeel","this.stopandprevent(ev","this.upload","this.uploader.addtoqueue(transfer.fil","this.uploadoptions.httpstrategi","tostr","transfer","transfer.dropeffect","transfer.fil","transform","type","types.contain","types.contains('fil","types.indexof","types.indexof('fil","upload","uploadopt","utils/configuration.model","utils/logger.model","void","zone"],"injectables/HttpClientUploadService.html":["100","abstractupload.servic","abstractuploadservic","accordingli","angular/common/http","angular/cor","backend","bodi","call","callback","catch","catch((err","class","client","clue","code","comput","const","constructor","constructor(logg","constructor(protect","contain","defin","deliv","descript","done","each","err","err.error","err.error.messag","err.head","err.messag","err.statu","error","event","event.bodi","event.head","event.load","event.statu","event.tot","event.typ","export","extend","file","fileitem","fileitem.model","fileitem.ɵonprogress(tot","handl","httpclient","httpclientuploadservic","httperrorrespons","httpeventtyp","httpeventtype.uploadprogress","httprequest","httprequest(this.method","httprespons","import","index","info","inject","inject(ngx_upload_opt","instanceof","item","item.fil","item.file.nam","item.formdata","item.iscancel","item.isupload","item.ɵonerror(err.error","item.ɵonerror(err.error.messag","item.ɵonsuccess(err.messag","item.ɵonsuccess(event.bodi","logger","match","math.round(event.load","method","name","network","new","ngx_upload_mock","ngx_upload_opt","ngxuploadlogg","observ","observable.of","occur","option","paramet","percentdon","privat","progress","req","respons","result","return","rxjs/add/operator/catch","rxjs/add/operator/do","rxjs/observ","send","sendabl","sendable.append(item.alia","show","side","sourc","src/services/httpclientupload.service.t","src/services/httpclientupload.service.ts:15","src/services/httpclientupload.service.ts:24","stream","success","super(logg","this.gettotalprogress(percentdon","this.httpclient.request(req).do(ev","this.isupload","this.logger.debug('progress","this.logger.debug(`fil","this.logger.info('ent","this.onbeforeuploaditem(item","this.onerror(item","this.onprogressitem(item","this.onsuccess(item","this.queue.indexof(fileitem","this.queue[index","this.url","throw","total","true","type","unsuccess","upload","uploadfileitem","uploadfileitem(fileitem","uploadopt","uploadservice.uploadfileitem","user","utils/configuration.model","utils/logger.model","went","wrong"],"injectables/HttpClientUploadServiceMock.html":["abstractuploadservic","angular/cor","class","constructor","constructor(logg","constructor(protect","defin","descript","export","extend","file","fileitem","httpclientuploadservicemock","import","index","info","inject","inject(ngx_upload_opt","logger","match","method","name","ngx_upload_opt","ngxuploadlogg","observ","observable.empti","option","paramet","result","return","rxjs/add/observable/empti","rxjs/observ","sourc","src/services/abstractupload.servic","src/services/fileitem.model","src/utils/configuration.model","src/utils/logger.model","super(logg","test/mocks/httpclientupload.service.mock.t","test/mocks/httpclientupload.service.mock.ts:11","test/mocks/httpclientupload.service.mock.ts:19","true","type","uploadfileitem","uploadfileitem(fileitem","uploadopt"],"injectables/MockLogger.html":["angular/cor","arg","class","debug","debug(...arg","defin","descript","error","error(...arg","export","file","implement","import","index","info","info(...arg","inject","log","log(...arg","match","method","mocklogg","name","ngxuploadlogg","option","output","paramet","properti","result","return","sourc","src/utils/logger.model","test/mocks/logger.model.mock.t","test/mocks/logger.model.mock.ts:15","test/mocks/logger.model.mock.ts:19","test/mocks/logger.model.mock.ts:23","test/mocks/logger.model.mock.ts:27","test/mocks/logger.model.mock.ts:31","test/mocks/logger.model.mock.ts:7","this.output.debug.push(...arg","this.output.error.push(...arg","this.output.info.push(...arg","this.output.log.push(...arg","this.output.warn.push(...arg","type","void","warn","warn(...arg"],"injectables/XhrUploadService.html":["0","100","200","abort","abstractupload.servic","abstractuploadservic","add","angular/cor","call","callback","cancel","catch","class","const","constructor","constructor(logg","constructor(protect","d'envoi","default","defin","descript","each","error","event","event.load","event.tot","export","extend","file","fileitem","fileitem.model","final","flight","function","handler","header","import","index","info","inject","inject(ngx_upload_opt","item","item.fil","item.file.nam","item.formdata","item.iscancel","item.isupload","item.ɵxhr","l'objet","lancé","le","listen","load","logger","match","math.round(event.lengthcomput","method","name","new","ngx_upload_opt","ngxuploadlogg","observ","observable((responseobserv","observable.of","ok","onerror","onload","onprogress","option","param","paramet","progress","regist","remov","request","responseobserver.error(xhr.respons","result","return","rxjs/add/observable/of","rxjs/observ","send","sendabl","sendable.append(item.alia","sont","sourc","src/services/xhrupload.service.t","src/services/xhrupload.service.ts:16","src/services/xhrupload.service.ts:24","super(logg","sur","this.disablemultipart","this.headers.foreach((valu","this.isupload","this.logger.debug('progress","this.logger.debug(item.fil","this.logger.info('ent","this.onbeforeuploaditem(item","this.onerror(item","this.onprogressitem(item","this.queue.indexof(fileitem","this.queue[index","this.url","this.withcredenti","true","type","upload","uploadfileitem","uploadfileitem(fileitem","uploadopt","uploadservice.uploadfileitem","user","utils/configuration.model","utils/logger.model","values.join","vènement","xhr","xhr.abort","xhr.addeventlistener('error","xhr.addeventlistener('load","xhr.getallresponsehead","xhr.open(this.method","xhr.removeeventlistener('error","xhr.removeeventlistener('load","xhr.respons","xhr.send(send","xhr.setrequestheader(nam","xhr.statu","xhr.upload.addeventlistener('progress","xhr.upload.removeeventlistener('progress","xhr.withcredenti","xhruploadservic","xmlhttprequest","xmlhttprequest.upload"],"classes/AbstractUploadService.html":["0","1","100","abstract","abstractuploadservic","add","addtoqueu","addtoqueue(fil","angular/form","array","befor","bodi","boolean","call","callback","cancelal","cancelfileitem","cancelfileitem(fileitem","class","const","constructor","constructor(logg","constructor(protect","current","default","defin","descript","disablemultipart","dure","error","export","fals","file","fileitem","fileitem.formdata.append(key","fileitem.iscancel","fileitem.isupload","fileitem.model","fileitem.ɵoncancel(fileitem.ɵxhr.respons","fileitem.ɵxhr.abort","fileitem.ɵxhr.response.head","fileitem.ɵxhr.statu","filelist","formgroup","formgroup.get(key","getnotuploadeditem","gettotalprogress","gettotalprogress(valu","header","https://embed.plnkr.co/p8xcewskgcog07pwdrlo","import","index","info","intern","isupload","item","item.cancel","item.isupload","item.upload","item.ɵonbeforeuploaditem","item.ɵonerror(bodi","item.ɵonprogress(progress","item.ɵonsuccess(bodi","items.length","logger","lowercas","mai","map","match","math.round(upload","method","n'est","name","new","ngxuploadlogg","notupload","null","number","observ","occur","onbeforeuploaditem","onbeforeuploaditem(item","oncancel","onerror","onerror(item","onprogress","onprogressitem","onprogressitem(item","onsuccess","onsuccess(item","option","options.method","options.url","pa","param","paramet","prepar","privat","progress","progresstot","properti","protect","public","queue","ratio","removeallfromqueu","removefromqueu","removefromqueue(fileitem","result","return","rxjs/observ","rxjs/subject","sourc","src/services/abstractupload.service.t","src/services/abstractupload.service.ts:106","src/services/abstractupload.service.ts:11","src/services/abstractupload.service.ts:117","src/services/abstractupload.service.ts:12","src/services/abstractupload.service.ts:13","src/services/abstractupload.service.ts:131","src/services/abstractupload.service.ts:14","src/services/abstractupload.service.ts:142","src/services/abstractupload.service.ts:15","src/services/abstractupload.service.ts:159","src/services/abstractupload.service.ts:16","src/services/abstractupload.service.ts:17","src/services/abstractupload.service.ts:170","src/services/abstractupload.service.ts:182","src/services/abstractupload.service.ts:193","src/services/abstractupload.service.ts:22","src/services/abstractupload.service.ts:24","src/services/abstractupload.service.ts:25","src/services/abstractupload.service.ts:26","src/services/abstractupload.service.ts:27","src/services/abstractupload.service.ts:28","src/services/abstractupload.service.ts:43","src/services/abstractupload.service.ts:63","src/services/abstractupload.service.ts:66","src/services/abstractupload.service.ts:78","src/services/abstractupload.service.ts:92","statu","string","subject","success","this.disablemultipart","this.getnotuploadeditem","this.getnotuploadeditems().filter(item","this.getnotuploadeditems().length","this.gettotalprogress","this.gettotalprogress(progress","this.head","this.isupload","this.logger.info('add","this.logger.info('ent","this.logger.info('gettotalprogress","this.logger.info(`cal","this.method","this.onbeforeuploaditem$.next(item","this.oncancel$.next(fileitem","this.onerror$.next({item","this.onprogress$.next({item","this.onsuccess$.next({item","this.progresstot","this.queu","this.queue.filter(item","this.queue.indexof(fileitem","this.queue.length","this.queue.push(fileitem","this.queue.splice(index","this.queue[index","this.removefromqueue(item","this.url","todo","total","true","type","updat","upload","uploadal","uploadfileitem","uploadfileitem(fileitem","uploadopt","uploadservice.ɵonbeforeuploaditem","url","utils/configuration.model","utils/logger.model","valu","void","withcredenti","xhr"],"classes/ConsoleLogger.html":["_consol","_debugen","_invokeconsolemethod(typ","abstract","appli","arg","class","consol","consolelogg","const","constructor","constructor(_consol","constructor(priv","debug","debug(...arg","default","defin","descript","don't","error","error(...arg","export","file","function","function.prototype.bind.call(logfn","ie9","implement","index","info","info(...arg","inform","log","log(...arg","logfn","logfn.appli","logfn.apply(this._consol","logger","match","messag","method","name","ngxuploadlogg","noop","nooplogg","op","option","paramet","polyfil","privat","result","return","safe","sourc","src/utils/logger.model.t","src/utils/logger.model.ts:29","src/utils/logger.model.ts:32","src/utils/logger.model.ts:34","src/utils/logger.model.ts:36","src/utils/logger.model.ts:38","src/utils/logger.model.ts:40","string","this._consol","this._console)[typ","this._console.log","this._debugen","this._invokeconsolemethod('debug","this._invokeconsolemethod('error","this._invokeconsolemethod('info","this._invokeconsolemethod('log","this._invokeconsolemethod('warn","true","type","undefin","void","warn","warn(...arg","write"],"classes/FileItem.html":["0","100","abstractupload.servic","abstractuploadservic","alia","boolean","callback","cancel","class","console.log('upload","constructor","constructor(fil","constructor(publ","default","defin","descript","err","export","fals","file","fileitem","formdata","header","import","index","info","iscancel","iserror","isreadi","issuccess","isupload","item","logger","match","method","name","new","ngxuploadlogg","number","onbeforeupload","onbeforeuploaditem","oncancel","oncancel(respons","onerror","onerror(respons","onprogress","onprogress(progress","onsuccess","onsuccess(respons","option","paramet","privat","progress","properti","protect","public","re","remov","respons","result","return","sourc","src/services/fileitem.model.t","src/services/fileitem.model.ts:10","src/services/fileitem.model.ts:100","src/services/fileitem.model.ts:103","src/services/fileitem.model.ts:107","src/services/fileitem.model.ts:11","src/services/fileitem.model.ts:111","src/services/fileitem.model.ts:12","src/services/fileitem.model.ts:14","src/services/fileitem.model.ts:16","src/services/fileitem.model.ts:18","src/services/fileitem.model.ts:20","src/services/fileitem.model.ts:23","src/services/fileitem.model.ts:34","src/services/fileitem.model.ts:39","src/services/fileitem.model.ts:44","src/services/fileitem.model.ts:55","src/services/fileitem.model.ts:6","src/services/fileitem.model.ts:60","src/services/fileitem.model.ts:7","src/services/fileitem.model.ts:71","src/services/fileitem.model.ts:8","src/services/fileitem.model.ts:82","src/services/fileitem.model.ts:9","src/services/fileitem.model.ts:97","statu","this.iscancel","this.iserror","this.isreadi","this.issuccess","this.isupload","this.logger.debug('complet","this.logger.debug('upload","this.logger.debug(res.statu","this.logger.error(err","this.onbeforeupload","this.oncancel(respons","this.onerror(respons","this.onprogress(progress","this.onsuccess(respons","this.progress","this.uploadservice.cancelfileitem(thi","this.uploadservice.removefromqueue(thi","this.uploadservice.uploadfileitem(this).subscrib","true","type","upload","uploadservic","utils/logger.model","valu","void","xhr","xmlhttprequest"],"classes/NgxUploadLogger.html":["_consol","_debugen","_invokeconsolemethod(typ","abstract","appli","arg","class","consol","consolelogg","const","constructor(priv","debug","debug(...arg","default","defin","descript","don't","error","error(...arg","export","file","function","function.prototype.bind.call(logfn","ie9","implement","index","info","info(...arg","inform","log","log(...arg","logfn","logfn.appli","logfn.apply(this._consol","logger","match","messag","method","modul","name","ngxuploadlogg","noop","nooplogg","op","option","paramet","polyfil","privat","result","return","safe","servic","simpl","sourc","src/utils/logger.model.t","src/utils/logger.model.ts:10","src/utils/logger.model.ts:13","src/utils/logger.model.ts:16","src/utils/logger.model.ts:19","src/utils/logger.model.ts:7","string","this._consol","this._console)[typ","this._console.log","this._debugen","this._invokeconsolemethod('debug","this._invokeconsolemethod('error","this._invokeconsolemethod('info","this._invokeconsolemethod('log","this._invokeconsolemethod('warn","true","type","undefin","void","warn","warn(...arg","write"],"classes/NoOpLogger.html":["_consol","_debugen","_invokeconsolemethod(typ","abstract","appli","arg","class","consol","consolelogg","const","constructor(priv","debug","debug(...arg","default","defin","descript","don't","error","error(...arg","export","file","function","function.prototype.bind.call(logfn","ie9","implement","index","info","info(...arg","inform","log","log(...arg","logfn","logfn.appli","logfn.apply(this._consol","logger","match","messag","method","ngxuploadlogg","noop","nooplogg","op","polyfil","privat","result","return","safe","sourc","src/utils/logger.model.t","src/utils/logger.model.ts:61","src/utils/logger.model.ts:63","src/utils/logger.model.ts:65","src/utils/logger.model.ts:67","src/utils/logger.model.ts:69","string","this._consol","this._console)[typ","this._console.log","this._debugen","this._invokeconsolemethod('debug","this._invokeconsolemethod('error","this._invokeconsolemethod('info","this._invokeconsolemethod('log","this._invokeconsolemethod('warn","true","undefin","void","warn","warn(...arg","write"],"classes/Person.html":["class","coverage/src/app/bootstrap/person.model.t","coverage/src/app/bootstrap/person.model.ts:2","coverage/src/app/bootstrap/person.model.ts:3","defin","email","export","file","index","info","match","name","person","properti","public","result","sourc","string","type"],"interfaces/DropTargetOptions.html":["angular/cor","boolean","color","colordrag","colordrop","const","debug","defin","drop","droptargetopt","enabl","export","fals","file","httpclientuploadservic","httpstrategi","import","index","info","injectiontoken","injectiontoken('ngx","interfac","logger","loggeropt","match","method","new","ngx_drop_target_opt","ngx_logger_opt","ngx_upload_mock","ngx_upload_opt","ngxdroptargetopt","ngxloggeropt","ngxuploadopt","option","post","properti","result","services/httpclientupload.servic","services/xhrupload.servic","sourc","src/utils/configuration.model.t","src/utils/configuration.model.ts:11","src/utils/configuration.model.ts:12","src/utils/configuration.model.ts:13","string","true","type","typeof","upload","uploadopt","uploadservic","url","xhruploadservic","zone"],"interfaces/LoggerOptions.html":["angular/cor","boolean","color","colordrag","colordrop","const","debug","defin","drop","droptargetopt","enabl","export","fals","file","httpclientuploadservic","httpstrategi","import","index","info","injectiontoken","injectiontoken('ngx","interfac","logger","loggeropt","match","method","new","ngx_drop_target_opt","ngx_logger_opt","ngx_upload_mock","ngx_upload_opt","ngxdroptargetopt","ngxloggeropt","ngxuploadopt","option","post","properti","result","services/httpclientupload.servic","services/xhrupload.servic","sourc","src/utils/configuration.model.t","src/utils/configuration.model.ts:17","src/utils/configuration.model.ts:18","string","true","type","typeof","upload","uploadopt","uploadservic","url","xhruploadservic","zone"],"interfaces/UploadOptions.html":["angular/cor","boolean","color","colordrag","colordrop","const","debug","defin","drop","droptargetopt","enabl","export","fals","file","httpclientuploadservic","httpstrategi","import","index","info","injectiontoken","injectiontoken('ngx","interfac","logger","loggeropt","match","method","new","ngx_drop_target_opt","ngx_logger_opt","ngx_upload_mock","ngx_upload_opt","ngxdroptargetopt","ngxloggeropt","ngxuploadopt","option","post","properti","result","services/httpclientupload.servic","services/xhrupload.servic","sourc","src/utils/configuration.model.t","src/utils/configuration.model.ts:22","src/utils/configuration.model.ts:23","src/utils/configuration.model.ts:24","string","true","type","typeof","upload","uploadopt","uploadservic","url","xhruploadservic","zone"],"miscellaneous/functions.html":["_loggerfactori","_loggerfactory(opt","associ","descript","factori","function","index","intern","logger","match","miscellan","name","option","paramet","result","src/index.t","type","undefin"],"miscellaneous/variables.html":["coverage/src/environments/environment.dev.t","coverage/src/environments/environment.prod.t","demo/src/app/app.module.t","demo/src/environments/environment.dev.t","demo/src/environments/environment.prod.t","droptargetopt","environ","index","karma","loggeropt","match","miscellan","ngx_drop_target_opt","ngx_logger_opt","ngx_upload_opt","ngxdeclar","ngxdroptargetopt","ngxloggeropt","ngxuploadopt","noop","object","requir","result","shim.t","src/index.t","src/utils/configuration.model.t","src/utils/logger.model.t","testscontext","type","uploadopt","variabl"],"miscellaneous/typealiases.html":["alias","index","match","method","miscellan","post","result","src/utils/configuration.model.t","type","typealias","uploadservic"]},"length":30},"tokenStore":{"root":{"0":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0440251572327044}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.1069182389937107}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.018867924528301886}}},"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.011210762331838564}}},"1":{"0":{"0":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{}},"1":{"1":{"docs":{},"f":{"4":{"3":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.09433962264150944}}},"docs":{}}},"docs":{}}},"2":{"0":{"0":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}},"1":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.09433962264150944},"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}},"3":{"5":{"docs":{},"b":{"docs":{},"a":{"9":{"4":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306}},"p":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725}}}}},"4":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306}}},"5":{"1":{"docs":{},"a":{"0":{"0":{"docs":{},"c":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306}}},"7":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306}}},"8":{"3":{"4":{"1":{"docs":{},"a":{"4":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"9":{"0":{"0":{"5":{"3":{"docs":{},"e":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"8":{"docs":{},"d":{"2":{"1":{"1":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306}},"a":{"docs":{},"a":{"2":{"docs":{},"e":{"2":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"changelog.html":{"ref":"changelog.html","tf":0.025157232704402517},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"t":{"docs":{},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.018867924528301886}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}}}}},"i":{"docs":{},"a":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0625}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564}}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.07476635514018691},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.0326530612244898},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.03065134099616858},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.06818181818181818}},"l":{"docs":{},"i":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"overview.html":{"ref":"overview.html","tf":0.20408163265306123},"modules.html":{"ref":"modules.html","tf":0.06060606060606061},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.097014925373134}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.10204081632653061},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.08955223880597014},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.046728971962617},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"r":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.027906976744186046},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.03508771929824561}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":5.002828854314003},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0547945205479452},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.05581395348837209},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.04093567251461988}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.06060606060606061}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"t":{"docs":{},"a":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03731343283582089},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245}},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.01272984441301273},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.04035874439461883},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.049586776859504134},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"d":{"docs":{},"i":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.014144271570014143}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.18181818181818182}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules.html":{"ref":"modules.html","tf":0.12121212121212122},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02054794520547945},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358}}}}}}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.03773584905660377}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426}}}}}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.0163265306122449},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.01532567049808429},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.011210762331838564}},"a":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"changelog.html":{"ref":"changelog.html","tf":0.031446540880503145}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.017123287671232876},"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":5.002828854314003},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":5.018264840182648},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":5.004484304932736},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":5.018604651162791},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":5.023391812865497},"classes/Person.html":{"ref":"classes/Person.html","tf":5.0476190476190474}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0136986301369863},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.03875968992248062},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.03875968992248062},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}}}},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.03875968992248062},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.046728971962617},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":5.020408163265306},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":5.019157088122605},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":5.056818181818182}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.018867924528301886}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.017123287671232876},"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.022727272727272728},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.02553191489361702},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.03211009174311927},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.016973125884016973},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.046511627906976744},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.049586776859504134},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.046511627906976744}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}},"(":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}}}},"e":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.017543859649122806}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":5.0091324200913245},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.041237113402061855},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}},"s":{"docs":{},":":{"1":{"3":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"5":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"9":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"docs":{}},"2":{"1":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"9":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"docs":{}},"3":{"4":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225}},"s":{"docs":{},":":{"1":{"2":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245}}},"4":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225}}},"docs":{}},"2":{"2":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225}}},"7":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808}},"s":{"docs":{},":":{"2":{"docs":{"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808}}},"3":{"docs":{"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}}},"d":{"9":{"docs":{},"e":{"8":{"docs":{},"c":{"1":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022388059701492536},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"changelog.html":{"ref":"changelog.html","tf":0.018867924528301886}},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.011494252873563218},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.014144271570014143},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0319634703196347},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.020179372197309416},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.027906976744186046},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}},"p":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.02631578947368421},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.04132231404958678},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.02040816326530612},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.022988505747126436},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.030508474576271188},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.05263157894736842},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.03818953323903819},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.05605381165919283},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343},"classes/Person.html":{"ref":"classes/Person.html","tf":0.047619047619047616},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.023255813953488372},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.023255813953488372}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":5.010169491525423}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725}}},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}},"n":{"docs":{},"e":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}},"'":{"docs":{},"t":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.03424657534246575},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.03409090909090909},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.03409090909090909},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.01532567049808429},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.01694915254237288},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":5.023255813953488},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.039603960396039604}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}}}}}}}}}}}}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.01694915254237288}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"t":{"docs":{},"a":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}},"'":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"license.html":{"ref":"license.html","tf":0.010309278350515464},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.04406779661016949},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.02553191489361702},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.03669724770642202}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}},"y":{"docs":{},"p":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0136986301369863},"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.05128205128205128},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.056818181818181816},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.06},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.017543859649122806},"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.08527131782945736},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.09090909090909091},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.08527131782945736}},"a":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}},"r":{"docs":{},"r":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.02631578947368421},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.02553191489361702}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.02553191489361702}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.04132231404958678},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.1188118811881188}}}}}}}},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"classes/Person.html":{"ref":"classes/Person.html","tf":0.09523809523809523}}}}}}},"f":{"5":{"1":{"docs":{},"e":{"2":{"3":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.023972602739726026},"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259},"license.html":{"ref":"license.html","tf":0.010309278350515464},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04672897196261682},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.04081632653061224},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.038314176245210725},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.045454545454545456},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.008486562942008486},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.02914798206278027},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.02127659574468085},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.056179775280898875},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.022935779816513763},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.042432814710042434},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":5.004484304932736}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}},"ɵ":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"ɵ":{"docs":{},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}},"s":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"a":{"docs":{},"l":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.06289308176100629}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.023972602739726026},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.009900990099009901}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.017937219730941704}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}}}}}}},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"l":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.712121212121212}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}}},"l":{"docs":{},"s":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.04035874439461883},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}},"e":{"docs":{},"n":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"p":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.06060606060606061}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}}}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.03409090909090909}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.028288543140028287},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.04708520179372197}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"n":{"docs":{},"k":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"/":{"docs":{},"p":{"8":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"k":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"0":{"7":{"docs":{},"p":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.03875968992248062}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.029787234042553193}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":5.008510638297873},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":5.022471910112359}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"m":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728}}}},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}},"o":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}},"o":{"docs":{},"p":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}},"e":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05136986301369863},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.09701492537313433},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.10256410256410256},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.03409090909090909},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.01532567049808429},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.01694915254237288},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.03829787234042553},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.07865168539325842},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.03669724770642202},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.008486562942008486},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.023255813953488372},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.024793388429752067},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.023255813953488372}}}}},"l":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.018604651162790697},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.03508771929824561}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0625}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0136986301369863}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01276595744680851}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":5.017021276595744},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":5.044943820224719},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":5.026315789473684},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":5.018348623853211}},"(":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.023728813559322035}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.023255813953488372},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.024793388429752067},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":5.0310077519379846},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":5.033057851239669},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":5.0310077519379846}}}}},"n":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.03508771929824561},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.018604651162790697},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343},"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}},"r":{"docs":{},"m":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.01694915254237288}}}}}},"e":{"9":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.017937219730941704}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.04101838755304102},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}},"(":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"/":{"1":{"0":{"2":{"4":{"docs":{},"/":{"1":{"0":{"2":{"4":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}}}},"ɵ":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"license.html":{"ref":"license.html","tf":3.3436426116838485}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.02631578947368421},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.027906976744186046},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.006726457399103139},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.017543859649122806},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.03977272727272727},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":5.024793388429752},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.06930693069306931}}}}}}}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}}}}}}}}},"f":{"docs":{},"n":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}},"e":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}}}}},"'":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"é":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"overview.html":{"ref":"overview.html","tf":0.02040816326530612},"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules.html":{"ref":"modules.html","tf":0.06060606060606061},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.05128205128205128},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537},"classes/Person.html":{"ref":"classes/Person.html","tf":0.047619047619047616},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019801980198019802},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.125}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04081632653061224},"modules.html":{"ref":"modules.html","tf":0.06060606060606061},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.04477611940298507},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":5.051282051282051}}}}}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}}}},"i":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"p":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.008486562942008486}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.014144271570014143},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.018604651162790697},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.023391812865497075},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.031007751937984496},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.03305785123966942},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.06976744186046512},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1875}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0319634703196347},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.05116279069767442},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.03508771929824561}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.3787878787878785},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.343234323432343},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.395833333333333}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":5.017543859649122}}}}}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"overview.html":{"ref":"overview.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":10.030303030303031},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.014925373134329},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":5.0256410256410255},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":5.011363636363637},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":5.04},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"e":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.0163265306122449},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.01532567049808429}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"d":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.07692307692307693}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.07692307692307693}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.07692307692307693}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}},"b":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"(":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02054794520547945},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.05128205128205128},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.0273972602739726},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.01694915254237288}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":5.0067796610169495}}}}}}}},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0594059405940594}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.06818181818181818},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.010273972602739725},"overview.html":{"ref":"overview.html","tf":0.05102040816326531},"modules.html":{"ref":"modules.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":5.045454545454546}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01702127659574468},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.0449438202247191},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.01834862385321101},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":5.018604651162791},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.023391812865497075}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.028037383177570093},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.04081632653061224},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.03065134099616858},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.03409090909090909},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.016973125884016973},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.020179372197309416},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/Person.html":{"ref":"classes/Person.html","tf":0.09523809523809523},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":5.011695906432749}}}}}}}},"d":{"docs":{},"e":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}}}}},"e":{"docs":{},"w":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.009900990099009901},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.023255813953488372},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.024793388429752067},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.023255813953488372}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.015558698727015558},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.013452914798206279}},":":{"docs":{},"'":{"1":{"docs":{},".":{"0":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"docs":{}}},"docs":{}},"\\":{"docs":{},"'":{"1":{"docs":{},".":{"0":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"docs":{}}},"docs":{}}}}}}}}},"'":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.07920792079207921}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01276595744680851},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.033707865168539325},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.027522935779816515},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}}}}}}}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.011494252873563218},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.009900990099009901},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.008486562942008486},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.009900990099009901},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.010204081632653}}}}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"license.html":{"ref":"license.html","tf":0.010309278350515464},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.03508771929824561}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"p":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.02681992337164751},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.0425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.10112359550561797},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.027522935779816515},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.02263083451202263},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.020179372197309416},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.023255813953488372},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.024793388429752067},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.023255813953488372},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364}}}}}}},"e":{"docs":{},"n":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}},"k":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0625}}}},"l":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.014144271570014143},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.01569506726457399}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/Person.html":{"ref":"classes/Person.html","tf":0.047619047619047616},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}}}}}},"o":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"license.html":{"ref":"license.html","tf":0.010309278350515464},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.03409090909090909},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.021216407355021217},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.02711864406779661},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}}}}}}},"a":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"a":{"docs":{},"m":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.011315417256011316}},"e":{"docs":{},"t":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.011494252873563218},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.014144271570014143},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.020179372197309416},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022388059701492536}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.02040816326530612},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.019157088122605363},"classes/Person.html":{"ref":"classes/Person.html","tf":5.0476190476190474}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01276595744680851}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"c":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.02545968882602546},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/Person.html":{"ref":"classes/Person.html","tf":0.14285714285714285}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"l":{"docs":{"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0136986301369863},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.018387553041018388}}}}}}},"r":{"docs":{},"e":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}},"d":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"overview.html":{"ref":"overview.html","tf":0.02040816326530612},"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules.html":{"ref":"modules.html","tf":0.06060606060606061},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.05128205128205128},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.009302325581395349},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537},"classes/Person.html":{"ref":"classes/Person.html","tf":0.047619047619047616},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019801980198019802},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.125}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01276595744680851},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.01569506726457399}},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.022727272727272728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.011494252873563218},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.02711864406779661},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01702127659574468},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.022935779816513763},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.033946251768033946},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0228310502283105},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.02914798206278027},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.0163265306122449},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.01532567049808429},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.011210762331838564}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}},"e":{"docs":{},"r":{"2":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305}}},"docs":{}}}}}}},"q":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258}}}}},"i":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"(":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},".":{"0":{"8":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}},"docs":{}},"1":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}},"docs":{}},"2":{"8":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006289308176100629},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022388059701492536}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.056074766355140186},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.024489795918367346},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.022988505747126436},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.06818181818181818}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}},"d":{"docs":{},"o":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}}}}}}},"o":{"docs":{},"f":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.09345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.04081632653061224},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.038314176245210725},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.09090909090909091},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/MaterialModule.html":{"ref":"modules/MaterialModule.html","tf":0.02564102564102564},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"classes/Person.html":{"ref":"classes/Person.html","tf":0.023809523809523808},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09278350515463918}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.02263083451202263},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.04708520179372197}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"classes/Person.html":{"ref":"classes/Person.html","tf":0.14285714285714285},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.07751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.03305785123966942},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.046511627906976744}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"modules.html":{"ref":"modules.html","tf":0.12121212121212122}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.008486562942008486}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.037383177570093455},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04081632653061224},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.05223880597014925},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":5.020408163265306},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04081632653061224},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.05223880597014925},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":5.019157088122605},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.012244897959183673},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.011494252873563218}}}},"d":{"docs":{},"e":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}},"o":{"docs":{},"w":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}},"i":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.12121212121212122}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"s":{"docs":{},":":{"3":{"0":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"3":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"docs":{}},"4":{"0":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"2":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"4":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"8":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"docs":{}},"5":{"9":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"docs":{}},"6":{"7":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"docs":{}},"8":{"5":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}},"s":{"docs":{},":":{"1":{"5":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}},"docs":{}},"2":{"4":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}},"s":{"docs":{},":":{"1":{"0":{"6":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"1":{"7":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"2":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"3":{"1":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"4":{"2":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"5":{"9":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"6":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"7":{"0":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"8":{"2":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"9":{"3":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"docs":{}},"2":{"2":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"4":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"5":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"6":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"7":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"8":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}},"docs":{}},"4":{"3":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"6":{"3":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"6":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"7":{"8":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"9":{"2":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}},".":{"docs":{},"t":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}},"s":{"docs":{},":":{"1":{"0":{"0":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"3":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"7":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"1":{"1":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"2":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"4":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"6":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"8":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426}}},"docs":{}},"2":{"0":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"3":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{}},"3":{"4":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"9":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{}},"4":{"4":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{}},"5":{"5":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{}},"6":{"0":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"7":{"1":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"8":{"2":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"9":{"7":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}},"docs":{}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}},"docs":{}},"2":{"4":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}},".":{"docs":{},"t":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0625}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124}}},"2":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124}}},"3":{"docs":{"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124}}},"7":{"docs":{"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356}}},"8":{"docs":{"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356}}},"docs":{}},"2":{"2":{"docs":{"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}},"3":{"docs":{"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}},"4":{"docs":{"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}},".":{"docs":{},"t":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}}},"3":{"docs":{"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}}},"6":{"docs":{"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}}},"9":{"docs":{"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}}},"docs":{}},"2":{"9":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}},"docs":{}},"3":{"2":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}},"4":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}},"6":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}},"8":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}},"docs":{}},"4":{"0":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621}}},"docs":{}},"6":{"1":{"docs":{"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"3":{"docs":{"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"5":{"docs":{"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"7":{"docs":{"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"9":{"docs":{"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}},"docs":{}},"7":{"docs":{"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"0":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.011210762331838564}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}},"o":{"docs":{},"p":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.017937219730941704}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}},"o":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}},"o":{"docs":{},"p":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.020338983050847456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.004243281471004243}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}},"e":{"docs":{},")":{"docs":{},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.025157232704402517}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.030612244897959183},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.12},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":5.056818181818182}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04081632653061224},"modules.html":{"ref":"modules.html","tf":0.030303030303030304},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":5.12},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}}}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}},"s":{"docs":{},":":{"1":{"1":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}}},"9":{"docs":{"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}},"s":{"docs":{},":":{"1":{"5":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}},"9":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}},"docs":{}},"2":{"3":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}},"7":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}},"docs":{}},"3":{"1":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}},"docs":{}},"7":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.008771929824561403}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0297029702970297}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.022727272727272728}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.018691588785046728},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}},"d":{"docs":{},"o":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01276595744680851},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.011235955056179775},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.01834862385321101},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.013452914798206279},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}},"e":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009345794392523364},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.011363636363636364}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728}},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.024489795918367346},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.02681992337164751},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.01694915254237288},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.05263157894736842},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.024045261669024046},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0273972602739726},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.04035874439461883},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/Person.html":{"ref":"classes/Person.html","tf":0.047619047619047616},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.03875968992248062},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.03305785123966942},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.03875968992248062},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.12871287128712872},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0625}},"o":{"docs":{},"f":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.015503875968992248}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.06164383561643835},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.02},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.056074766355140186},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.0653061224489796},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.06513409961685823},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.03409090909090909},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.013559322033898305},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01276595744680851},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.03253182461103253},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.017123287671232876},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.028409090909090908},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.023728813559322035},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.01702127659574468},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.0449438202247191},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.01834862385321101},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":5.023255813953488},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.06930693069306931}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.024489795918367346},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.022988505747126436},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.006726457399103139},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.031007751937984496},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1875}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}},"ɵ":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.00816326530612245},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00851063829787234},"injectables/HttpClientUploadServiceMock.html":{"ref":"injectables/HttpClientUploadServiceMock.html","tf":0.02247191011235955},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.009174311926605505},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829}}}}}},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.015503875968992248},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.01652892561983471},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.03875968992248062}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"license.html":{"ref":"license.html","tf":0.020618556701030927}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544}}}}}},"r":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.003389830508474576},"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.0014144271570014145},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012578616352201259}}}}}}}},"a":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.037383177570093455},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.0163265306122449},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.01532567049808429},"components/TestComponent.html":{"ref":"components/TestComponent.html","tf":0.045454545454545456}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.676567656765676}}}}}}},"l":{"docs":{},"u":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.009900990099009901},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.004484304932735426}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.0038314176245210726},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.010169491525423728},"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.043859649122807015},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.015558698727015558},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0958904109589041},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.02914798206278027},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.09767441860465116},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.12280701754385964}}}}},"è":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575},"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.005657708628005658}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"k":{"docs":{},"o":{"docs":{},"z":{"docs":{},"a":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.017123287671232876},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007462686567164179},"components/SimpleBootstrapComponent.html":{"ref":"components/SimpleBootstrapComponent.html","tf":0.004081632653061225},"components/SimpleMaterialComponent.html":{"ref":"components/SimpleMaterialComponent.html","tf":0.007662835249042145}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}}}},"n":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.02631578947368421},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0182648401826484},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.023255813953488372},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.029239766081871343}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/MockLogger.html":{"ref":"injectables/MockLogger.html","tf":0.017543859649122806},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.013953488372093023},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.011695906432748537}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/HttpClientUploadService.html":{"ref":"injectables/HttpClientUploadService.html","tf":0.00425531914893617}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0319634703196347},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.05116279069767442},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.03508771929824561}}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003424657534246575}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0136986301369863},"directives/NgxDragAndDropDirective.html":{"ref":"directives/NgxDragAndDropDirective.html","tf":0.006779661016949152},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.007751937984496124},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.008264462809917356},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.007751937984496124}}}},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02040816326530612},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.011363636363636364},"modules/TestModule.html":{"ref":"modules/TestModule.html","tf":0.04}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"o":{"docs":{},"z":{"docs":{},"a":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.009900990099009901}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0091324200913242},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}}},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.005681818181818182},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0136986301369863},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/ConsoleLogger.html":{"ref":"classes/ConsoleLogger.html","tf":0.0045662100456621},"classes/NgxUploadLogger.html":{"ref":"classes/NgxUploadLogger.html","tf":0.004651162790697674},"classes/NoOpLogger.html":{"ref":"classes/NoOpLogger.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/AbstractUploadService.html":{"ref":"classes/AbstractUploadService.html","tf":0.002828854314002829},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.008968609865470852}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxUploadModule.html":{"ref":"modules/NgxUploadModule.html","tf":0.017045454545454544},"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":5.009174311926605},"interfaces/DropTargetOptions.html":{"ref":"interfaces/DropTargetOptions.html","tf":0.023255813953488372},"interfaces/LoggerOptions.html":{"ref":"interfaces/LoggerOptions.html","tf":0.024793388429752067},"interfaces/UploadOptions.html":{"ref":"interfaces/UploadOptions.html","tf":0.023255813953488372}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.013761467889908258}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525},"classes/FileItem.html":{"ref":"classes/FileItem.html","tf":0.006726457399103139}},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/XhrUploadService.html":{"ref":"injectables/XhrUploadService.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}}}}}},"length":2074},"corpusTokens":["0","07","08","09","1","1.0.0","100","111f431","2","20","200","2017","24","3","35ba948","3px","4","51a00c9","6","7","8341a48","9","90053e8","98d2115","9aa2e24","_consol","_debugen","_invokeconsolemethod(typ","_loggerfactori","_loggerfactory(opt","abort","abov","abstract","abstractupload.servic","abstractuploadservic","accordingli","action","actual_compon","ad","add","addtoqueu","addtoqueue(fil","alia","alias","allow","alpha.0","alpha.1","alpha.2","alpha.3","alpha.4","alpha.5","alpha.6","alpha.7","and/or","angular","angular/common/http","angular/cor","angular/form","angular/http","angular/materi","angular/platform","angular/rout","anyon","app","app.compon","app.component.css","app.component.html","appcompon","appli","applic","appmodul","arg","argument","aris","array","aspect","associ","author","auto","avail","backend","background","becom","befor","beta.0","bind","bodi","boolean","bootstrap","bootstrap/ng","bootstrap/simple.compon","border","bound","brows","browser","browser/anim","browseranimationsmodul","browsermodul","bug","byte","c","call","callback","cancel","cancelal","cancelfileitem","cancelfileitem(fileitem","case","catch","catch((err","chang","changelog","charg","claim","class","client","clue","cluster_appmodul","cluster_appmodule_bootstrap","cluster_appmodule_declar","cluster_appmodule_import","cluster_ngxuploadmodul","cluster_ngxuploadmodule_declar","cluster_ngxuploadmodule_export","cluster_testmodul","cluster_testmodule_declar","code","color","colordrag","colordrop","commit","compodoc","compon","component_templ","comput","condit","config","configur","connect","consol","console.log('drop","console.log('upload","consolelogg","consolelogger(_consol","const","constructor","constructor(_consol","constructor(el","constructor(fil","constructor(logg","constructor(priv","constructor(protect","constructor(publ","constructor(upload","contain","content","contract","copi","copyright","coverage/src/app/app.component.t","coverage/src/app/app.module.t","coverage/src/app/bootstrap/person.model.t","coverage/src/app/bootstrap/person.model.ts:2","coverage/src/app/bootstrap/person.model.ts:3","coverage/src/app/bootstrap/simple.component.t","coverage/src/app/bootstrap/simple.component.ts:12","coverage/src/app/bootstrap/simple.component.ts:14","coverage/src/app/bootstrap/simple.component.ts:22","coverage/src/app/bootstrap/simple.component.ts:27","coverage/src/app/material/material.module.t","coverage/src/app/material/simple.component.t","coverage/src/app/material/simple.component.ts:13","coverage/src/app/material/simple.component.ts:15","coverage/src/app/material/simple.component.ts:19","coverage/src/app/material/simple.component.ts:21","coverage/src/app/material/simple.component.ts:29","coverage/src/app/material/simple.component.ts:34","coverage/src/environments/environment.dev.t","coverage/src/environments/environment.prod.t","css","current","d'envoi","d9e8c14","damag","data","datatransf","deal","debug","debug(...arg","declar","default","defin","deliv","demo","demo/src/app/app.module.t","demo/src/environments/environment.dev.t","demo/src/environments/environment.prod.t","dep","depend","descript","design","detail","direct","directives/dropzone.direct","disablemultipart","distribut","doc","document","dom","don't","done","dot","drag","dragev","dragleav","dragleave(ev","dragov","dragover(ev","drop","drop(ev","dropevent(ev","dropopt","droppedfil","droptargetopt","dropzonecolor","dropzonecolordrag","dropzonecolordrop","due","dure","each","el","element","elementref","email","enabl","environ","err","err.error","err.error.messag","err.head","err.messag","err.statu","error","error(...arg","event","event.bodi","event.datatransf","event.head","event.load","event.originalevent.datatransf","event.preventdefault","event.statu","event.stoppropag","event.tot","event.typ","eventemitt","exampl","export","exporta","express","extend","f51e23a","factori","fals","featur","file","file.nam","file.s","file.typ","fileitem","fileitem.formdata.append(key","fileitem.iscancel","fileitem.isupload","fileitem.model","fileitem.ɵoncancel(fileitem.ɵxhr.respons","fileitem.ɵonprogress(tot","fileitem.ɵxhr.abort","fileitem.ɵxhr.response.head","fileitem.ɵxhr.statu","filelist","final","finish","fit","fix","flight","follow","formbind","formdata","formgroup","formgroup.get(key","formsmodul","forroot(uploadopt","framework","free","full","function","function.prototype.bind.call(logfn","furnish","gener","get","getnotuploadeditem","gettotalprogress","gettotalprogress(valu","gettransfer(ev","github","gitignor","grant","graph","green","grey","guidelin","handl","handler","havefiles(typ","header","here","herebi","holder","home","hostlisten","hostlistener('dragleav","hostlistener('dragov","hostlistener('drop","html","httpclient","httpclientuploadservic","httpclientuploadservicemock","httperrorrespons","httpeventtyp","httpeventtype.uploadprogress","httpmodul","httprequest","httprequest(this.method","httprespons","https://embed.plnkr.co/p8xcewskgcog07pwdrlo","https://ngx","httpstrategi","ie","ie9","implement","impli","import","includ","index","info","info(...arg","inform","inject","inject(ngx_drop_target_opt","inject(ngx_upload_opt","injectiontoken","injectiontoken('ngx","injector","input","instal","instanceof","interfac","intern","iscancel","isdevmod","iserror","isreadi","issuccess","isupload","item","item(","item.cancel","item.fil","item.file.nam","item.formdata","item.iscancel","item.isupload","item.upload","item.ɵonbeforeuploaditem","item.ɵonerror(bodi","item.ɵonerror(err.error","item.ɵonerror(err.error.messag","item.ɵonprogress(progress","item.ɵonsuccess(bodi","item.ɵonsuccess(err.messag","item.ɵonsuccess(event.bodi","item.ɵxhr","itemfile.file.nam","itemfile.file.size/1024/1024","items.length","karma","kind","koza","l'objet","lancé","le","legend","liabil","liabl","licens","limit","listen","load","log","log(...arg","logfn","logfn.appli","logfn.apply(this._consol","logger","loggeropt","look","lowercas","mai","manag","map","match","materi","material/material.modul","material/simple.compon","materialmodul","math.round(event.lengthcomput","math.round(event.load","math.round(upload","mb","mdbuttonmodul","mdcardmodul","mdinputmodul","mdprogressbarmodul","merchant","merg","messag","metadata","method","miscellan","mit","mock","mocklogg","model","modifi","modul","modulewithprovid","more","n'est","name","network","new","ng","ng(x","ngbmodul","ngbmodule.forroot","ngform","ngmodul","ngmodule({declar","ngoninit","ngx","ngx_drop_target_opt","ngx_logger_opt","ngx_upload_mock","ngx_upload_opt","ngxdeclar","ngxdraganddrop","ngxdraganddrop(dropopt","ngxdraganddropdirect","ngxdroptargetopt","ngxloggeropt","ngxuploadlogg","ngxuploadmodul","ngxuploadmodule.forroot","ngxuploadmodule.forroot(uploadopt","ngxuploadopt","node","noninfring","noop","nooplogg","notabl","notic","notupload","npm","null","number","number:'1.0","number:\\'1.0","object","observ","observable((responseobserv","observable.empti","observable.of","obtain","occur","offer","ok","on","onbeforeupload","onbeforeuploaditem","onbeforeuploaditem(item","oncancel","oncancel(respons","ondragleave(ev","ondragover(ev","ondrop","ondrop(data","onerror","onerror(item","onerror(respons","oninit","onload","onprogress","onprogress(progress","onprogressitem","onprogressitem(item","onsuccess","onsuccess(item","onsuccess(respons","op","option","options.debug","options.en","options.method","options.url","otherwis","out","output","overview","overwrit","pa","package.json","param","paramet","parsefil","parsefile(fil","particular","path","pathmatch","percentdon","permiss","permit","person","person.model","polyfil","portion","post","prepar","present","privat","problem","progress","progresstot","project","properti","propos","protect","provid","public","publish","purpl","purpos","queue","ratio","re","reactiveformsmodul","readm","real","redirectto","regard","regist","remov","removeallfromqueu","removefromqueu","removefromqueue(fileitem","render","renderer2","req","request","requir","reset","respons","responseobserver.error(xhr.respons","restrict","result","return","rgba(0,0,0,0.08","rgba(0,0,0,0.12","rgba(0,0,0,0.28","right","root","root'},{'nam","rout","routermodul","routermodule.forroot(rout","rxjs/add/observable/empti","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/do","rxjs/observ","rxjs/subject","safe","see","selector","sell","send","sendabl","sendable.append(item.alia","servic","services/abstractupload.servic","services/fileitem.model","services/httpclientupload.servic","services/xhrupload.servic","set","setup","shall","shim.t","show","side","simpl","simple.component.css","simple.component.html","simplebootstrapcompon","simplematerialcompon","size","softwar","sont","sourc","specif","src/directives/dropzone.directive.t","src/directives/dropzone.directive.ts:30","src/directives/dropzone.directive.ts:33","src/directives/dropzone.directive.ts:40","src/directives/dropzone.directive.ts:42","src/directives/dropzone.directive.ts:44","src/directives/dropzone.directive.ts:48","src/directives/dropzone.directive.ts:59","src/directives/dropzone.directive.ts:67","src/directives/dropzone.directive.ts:85","src/index.t","src/services/abstractupload.servic","src/services/abstractupload.service.t","src/services/abstractupload.service.ts:106","src/services/abstractupload.service.ts:11","src/services/abstractupload.service.ts:117","src/services/abstractupload.service.ts:12","src/services/abstractupload.service.ts:13","src/services/abstractupload.service.ts:131","src/services/abstractupload.service.ts:14","src/services/abstractupload.service.ts:142","src/services/abstractupload.service.ts:15","src/services/abstractupload.service.ts:159","src/services/abstractupload.service.ts:16","src/services/abstractupload.service.ts:17","src/services/abstractupload.service.ts:170","src/services/abstractupload.service.ts:182","src/services/abstractupload.service.ts:193","src/services/abstractupload.service.ts:22","src/services/abstractupload.service.ts:24","src/services/abstractupload.service.ts:25","src/services/abstractupload.service.ts:26","src/services/abstractupload.service.ts:27","src/services/abstractupload.service.ts:28","src/services/abstractupload.service.ts:43","src/services/abstractupload.service.ts:63","src/services/abstractupload.service.ts:66","src/services/abstractupload.service.ts:78","src/services/abstractupload.service.ts:92","src/services/fileitem.model","src/services/fileitem.model.t","src/services/fileitem.model.ts:10","src/services/fileitem.model.ts:100","src/services/fileitem.model.ts:103","src/services/fileitem.model.ts:107","src/services/fileitem.model.ts:11","src/services/fileitem.model.ts:111","src/services/fileitem.model.ts:12","src/services/fileitem.model.ts:14","src/services/fileitem.model.ts:16","src/services/fileitem.model.ts:18","src/services/fileitem.model.ts:20","src/services/fileitem.model.ts:23","src/services/fileitem.model.ts:34","src/services/fileitem.model.ts:39","src/services/fileitem.model.ts:44","src/services/fileitem.model.ts:55","src/services/fileitem.model.ts:6","src/services/fileitem.model.ts:60","src/services/fileitem.model.ts:7","src/services/fileitem.model.ts:71","src/services/fileitem.model.ts:8","src/services/fileitem.model.ts:82","src/services/fileitem.model.ts:9","src/services/fileitem.model.ts:97","src/services/httpclientupload.service.t","src/services/httpclientupload.service.ts:15","src/services/httpclientupload.service.ts:24","src/services/xhrupload.service.t","src/services/xhrupload.service.ts:16","src/services/xhrupload.service.ts:24","src/utils/configuration.model","src/utils/configuration.model.t","src/utils/configuration.model.ts:11","src/utils/configuration.model.ts:12","src/utils/configuration.model.ts:13","src/utils/configuration.model.ts:17","src/utils/configuration.model.ts:18","src/utils/configuration.model.ts:22","src/utils/configuration.model.ts:23","src/utils/configuration.model.ts:24","src/utils/logger.model","src/utils/logger.model.t","src/utils/logger.model.ts:10","src/utils/logger.model.ts:13","src/utils/logger.model.ts:16","src/utils/logger.model.ts:19","src/utils/logger.model.ts:29","src/utils/logger.model.ts:32","src/utils/logger.model.ts:34","src/utils/logger.model.ts:36","src/utils/logger.model.ts:38","src/utils/logger.model.ts:40","src/utils/logger.model.ts:61","src/utils/logger.model.ts:63","src/utils/logger.model.ts:65","src/utils/logger.model.ts:67","src/utils/logger.model.ts:69","src/utils/logger.model.ts:7","standard","start","static","statu","stopandprevent(ev","stream","string","styleurl","subject","sublicens","substanti","success","super(logg","support","sur","svg","tabl","take","templat","templateurl","test","test/directives/test.component.t","test/mocks/httpclientupload.service.mock.t","test/mocks/httpclientupload.service.mock.ts:11","test/mocks/httpclientupload.service.mock.ts:19","test/mocks/logger.model.mock.t","test/mocks/logger.model.mock.ts:15","test/mocks/logger.model.mock.ts:19","test/mocks/logger.model.mock.ts:23","test/mocks/logger.model.mock.ts:27","test/mocks/logger.model.mock.ts:31","test/mocks/logger.model.mock.ts:7","testcompon","testmodul","testscontext","this._consol","this._console)[typ","this._console.log","this._debugen","this._invokeconsolemethod('debug","this._invokeconsolemethod('error","this._invokeconsolemethod('info","this._invokeconsolemethod('log","this._invokeconsolemethod('warn","this.disablemultipart","this.dropopt","this.dropoptions.color","this.dropoptions.colordrag","this.dropoptions.colordrop","this.formbind","this.formbinded.form","this.getnotuploadeditem","this.getnotuploadeditems().filter(item","this.getnotuploadeditems().length","this.gettotalprogress","this.gettotalprogress(percentdon","this.gettotalprogress(progress","this.gettransfer(ev","this.havefiles(transfer.typ","this.head","this.headers.foreach((valu","this.httpclient.request(req).do(ev","this.injector.get(this.uploadoptions.httpstrategi","this.iscancel","this.iserror","this.isreadi","this.issuccess","this.isupload","this.logger.debug('complet","this.logger.debug('dragleav","this.logger.debug('dragov","this.logger.debug('drop","this.logger.debug('progress","this.logger.debug('upload","this.logger.debug(`fil","this.logger.debug(item.fil","this.logger.debug(json.stringify(dropopt","this.logger.debug(res.statu","this.logger.error(err","this.logger.info('add","this.logger.info('ent","this.logger.info('gettotalprogress","this.logger.info('strategi","this.logger.info(`cal","this.method","this.model","this.onbeforeupload","this.onbeforeuploaditem$.next(item","this.onbeforeuploaditem(item","this.oncancel$.next(fileitem","this.oncancel(respons","this.ondrop.next(droppedfil","this.onerror$.next({item","this.onerror(item","this.onerror(respons","this.onprogress$.next({item","this.onprogress(progress","this.onprogressitem(item","this.onsuccess$.next({item","this.onsuccess(item","this.onsuccess(respons","this.output.debug.push(...arg","this.output.error.push(...arg","this.output.info.push(...arg","this.output.log.push(...arg","this.output.warn.push(...arg","this.parsefile(data[0","this.progress","this.progresstot","this.queu","this.queue.filter(item","this.queue.indexof(fileitem","this.queue.length","this.queue.push(fileitem","this.queue.splice(index","this.queue[index","this.removefromqueue(item","this.renderer.addclass(this.el.nativeel","this.renderer.removeclass(this.el.nativeel","this.stopandprevent(ev","this.upload","this.uploader.addtoqueue(transfer.fil","this.uploadoptions.httpstrategi","this.uploadservice.cancelfileitem(thi","this.uploadservice.removefromqueue(thi","this.uploadservice.uploadfileitem(this).subscrib","this.url","this.withcredenti","those","through","throw","todo","tort","tostr","total","transfer","transfer.dropeffect","transfer.fil","transform","tree","true","type","typealias","typeof","types.contain","types.contains('fil","types.indexof","types.indexof('fil","undefin","unit","unsuccess","updat","upload","upload.github.io","upload.github.io/doc","uploadal","uploader.queue.length","uploadfileitem","uploadfileitem(fileitem","uploadopt","uploador","uploadservic","uploadservice.uploadfileitem","uploadservice.ɵonbeforeuploaditem","uploadsetup","url","us","usag","usefactori","user","usevalu","utils/configuration.model","utils/logger.model","valu","values.join","var","variabl","version","via","view","void","vènement","warn","warn(...arg","warranti","went","whether","william","withcredenti","without","wkoza/ngx","write","wrong","xhr","xhr.abort","xhr.addeventlistener('error","xhr.addeventlistener('load","xhr.getallresponsehead","xhr.open(this.method","xhr.removeeventlistener('error","xhr.removeeventlistener('load","xhr.respons","xhr.send(send","xhr.setrequestheader(nam","xhr.statu","xhr.upload.addeventlistener('progress","xhr.upload.removeeventlistener('progress","xhr.withcredenti","xhruploadservic","xmlhttprequest","xmlhttprequest.upload","yarn","your_backend_upload_url","zone","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-upload\n\n\n\n\n\nDemo\nhttps://ngx-upload.github.io\nTable of contents\n\nAbout\nInstallation\nSetup\nUsage\nDocumentation\nLicense\n\nAbout\nNgx-upload is a module for the Angular framework. Ngx-upload supports drag and drop, upload progress and manages a file upload queue for you.\nNgx-upload is bound to anyone presentation framework but you can use it with ng(x)-bootstrap or Angular Material Design without any problems.\nInstallation\nInstall through npm:\nnpm install @wkoza/ngx-uploadOR\nyarn add @wkoza/ngx-uploadSetup\nJust include ngx-upload in your module with FormsModule or ReactiveFormsModule:\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {NgxUploadModule} from '@wkoza/ngx-upload';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule, // or ReactiveFormsModule\n    NgxUploadModule.forRoot()\n  ]\n})\nexport class AppModule {}Ngx-upload become with a mock configuration. In a real application, you must configure by declaring the configuration object UploadOptions like this :\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {NgxUploadModule} from '@wkoza/ngx-upload';\n\nconst uploadOptions: UploadOptions = {\n  method : 'POST',\n  url: 'your_backend_upload_url'\n};\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule, // or ReactiveFormsModule\n    NgxUploadModule.forRoot(uploadOptions)\n  ]\n})\nexport class AppModule {}Ngx-upload also proposes to configure the drop zone aspect. Then, you can change the css class of your drop zone regarding the drop event:\n\nWhen you drag a file\nWhen you drop a file\nIn other cases\n\nFor this, you should add the configuration object DropTargetOptions like this :\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {NgxUploadModule} from '@wkoza/ngx-upload';\n\nconst uploadOptions: UploadOptions = {\n  method : 'POST',\n  url: 'your_backend_upload_url'\n};\n\nexport const ngxDropTargetOptions: DropTargetOptions = {\n  color: 'dropZoneColor',\n  colorDrag: 'dropZoneColorDrag',\n  colorDrop: 'dropZoneColorDrop'\n};\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule, // or ReactiveFormsModule\n    NgxUploadModule.forRoot(uploadOptions, ngxDropTargetOptions)\n  ]\n})\nexport class AppModule {}In this example, you should also declare these css classes in your own css :\n\n.dropZoneColor {\n  border: 3px dotted rgba(0,0,0,0.08);\n  background-color: rgba(0,0,0,0.12)\n}\n\n.dropZoneColorDrag {\n  border: 3px dotted rgba(0,0,0,0.28);\n  background-color: grey\n}\n\n.dropZoneColorDrop {\n  border: 3px dotted rgba(0,0,0,0.08);\n  background-color: rgba(0,0,0,0.12)\n}Usage\nDrop zone\nNgx-upload offers one directive for your drop zone called ngxDragAndDrop. It allows to add the files in the upload queue. During the drop event, it throws an event called onDrop that you can catch :\n\n        Drop files here to upload\nTo finish, we can overwrite the DropTargetOptions for a specific case due to property binding :\n\n        Drop files here to upload\nUpload queue\nEach file is added to a queue that you can manage with uploader service. Take a look at those examples for more details :\nDocumentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://ngx-upload.github.io/docs/\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxUploadModule\n\n\n\ncluster_NgxUploadModule_declarations\n\n\n\ncluster_NgxUploadModule_exports\n\n\n\ncluster_TestModule\n\n\n\ncluster_TestModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nSimpleBootstrapComponent\n\nSimpleBootstrapComponent\n\nAppModule -->\n\nSimpleBootstrapComponent->AppModule\n\n\n\nAppModule -->\n\nSimpleBootstrapComponent->AppModule\n\n\n\n\n\nSimpleMaterialComponent\n\nSimpleMaterialComponent\n\nAppModule -->\n\nSimpleMaterialComponent->AppModule\n\n\n\nAppModule -->\n\nSimpleMaterialComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n...ngxDeclarations\n\n...ngxDeclarations\n\n\n\nNgxUploadModule\n\nNgxUploadModule\n\nNgxUploadModule -->\n\n...ngxDeclarations->NgxUploadModule\n\n\n\n\n\n...ngxDeclarations \n\n...ngxDeclarations \n\n...ngxDeclarations  -->\n\nNgxUploadModule->...ngxDeclarations \n\n\n\n\n\nTestComponent\n\nTestComponent\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nTestComponent->TestModule\n\n\n\n\n\n\n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            6 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        7 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n1.0.0-beta.0 (2017-09-24)\n\n1.0.0-alpha.7 (2017-08-20)\n\n1.0.0-alpha.6 (2017-08-20)\nBug Fixes\n\ndemo: add ie polyfill (111f431)\n\n\n1.0.0-alpha.5 (2017-08-09)\n\n1.0.0-alpha.4 (2017-08-09)\nBug Fixes\n\nconfig: fix route (9aa2e24)\ndocs: fix readme (90053e8)\n\n\n1.0.0-alpha.3 (2017-08-08)\nBug Fixes\n\nconfig: fix configuration (8341a48)\n\n\n1.0.0-alpha.2 (2017-08-08)\nBug Fixes\n\nconfig: fix injection error (35ba948)\n\n\n1.0.0-alpha.1 (2017-08-08)\nFeatures\n\ndemo: add demo application (51a00c9)\n\n\n1.0.0-alpha.0 (2017-08-07)\nBug Fixes\n\npackage.json: change name (f51e23a)\n\n\n1.0.0-alpha.1 (2017-08-07)\n\n1.0.0-alpha.1 (2017-08-07)\n\n1.0.0-alpha.6 (2017-08-07)\nBug Fixes\n\ntests: unit test + add gitignore (98d2115)\ntests: unit test + add gitignore (d9e8c14)\n\n\n1.0.0-alpha.4 (2017-08-07)\n\n1.0.0-alpha.3 (2017-08-07)\n\n1.0.0-alpha.2 (2017-08-07)\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 William KOZA\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxUploadModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nSimpleBootstrapComponent\n\nSimpleBootstrapComponent\n\nAppModule -->\n\nSimpleBootstrapComponent->AppModule\n\n\n\n\n\nSimpleMaterialComponent\n\nSimpleMaterialComponent\n\nAppModule -->\n\nSimpleMaterialComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            coverage/src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                SimpleBootstrapComponent\n                            \n                            \n                                SimpleMaterialComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\nimport {AppComponent} from './app.component';\nimport {Routes, RouterModule} from '@angular/router';\nimport {NgxUploadModule} from '@wKoza/ngx-upload';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {SimpleBootstrapComponent} from './bootstrap/simple.component';\nimport {SimpleMaterialComponent} from './material/simple.component';\nimport {MaterialModule} from './material/material.module';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'github', pathMatch: 'full'},\n  {path: 'simple-bootstrap', component: SimpleBootstrapComponent},\n  {path: 'simple-material', component: SimpleMaterialComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SimpleBootstrapComponent,\n    SimpleMaterialComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(routes),\n    NgxUploadModule.forRoot(),\n    NgbModule.forRoot(),\n    MaterialModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            coverage/src/app/material/material.module.ts\n        \n\n\n        \n            \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {MdButtonModule, MdCardModule, MdInputModule, MdProgressBarModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  imports: [BrowserAnimationsModule, MdButtonModule, MdInputModule, MdProgressBarModule, MdCardModule],\n  exports: [BrowserAnimationsModule, MdButtonModule, MdInputModule, MdProgressBarModule, MdCardModule],\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxUploadModule.html":{"url":"modules/NgxUploadModule.html","title":"module - NgxUploadModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxUploadModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxUploadModule\n\n\n\ncluster_NgxUploadModule_declarations\n\n\n\ncluster_NgxUploadModule_exports\n\n\n\n\n...ngxDeclarations\n\n...ngxDeclarations\n\n\n\nNgxUploadModule\n\nNgxUploadModule\n\nNgxUploadModule -->\n\n...ngxDeclarations->NgxUploadModule\n\n\n\n\n\n...ngxDeclarations \n\n...ngxDeclarations \n\n...ngxDeclarations  -->\n\nNgxUploadModule->...ngxDeclarations \n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ...ngxDeclarations\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ...ngxDeclarations\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { isDevMode, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport {\n    DropTargetOptions,\n    LoggerOptions,\n    NGX_UPLOAD_OPTIONS,\n    NGX_DROP_TARGET_OPTIONS,\n    NGX_LOGGER_OPTIONS,\n    ngxUploadOptions,\n    ngxDropTargetOptions,\n    ngxloggerOptions,\n    UploadOptions\n} from './utils/configuration.model';\nimport { NgxDragAndDropDirective } from './directives/dropzone.directive';\nimport { ConsoleLogger, NgxUploadLogger, NoOpLogger } from './utils/logger.model';\nimport { XhrUploadService } from './services/xhrUpload.service';\nimport { HttpClientUploadService } from './services/httpClientUpload.service';\n\nexport { DropTargetOptions, UploadOptions, LoggerOptions } from './utils/configuration.model';\nexport { FileItem } from './services/fileItem.model';\nexport { XhrUploadService } from './services/xhrUpload.service';\nexport { HttpClientUploadService } from './services/httpClientUpload.service';\nexport { UploadService } from './utils/configuration.model';\n\n\nconst ngxDeclarations = [\n    NgxDragAndDropDirective\n];\n\n/**\n * Factory associated with internal logger\n * @param options\n * @returns {any}\n * @private\n */\nexport function _loggerFactory(options: LoggerOptions): NgxUploadLogger {\n    const enabled = options.enabled != null ? options.enabled : isDevMode();\n    if (enabled) {\n        const _console: Console = typeof console === 'object' ? console : {};\n        const debug = options.debug != null ? options.debug : true;\n        return new ConsoleLogger(_console, debug);\n    }\n    return new NoOpLogger();\n}\n\n@NgModule({\n    declarations: [\n        ...ngxDeclarations\n    ],\n    exports: [\n        ...ngxDeclarations\n    ]\n})\nexport class NgxUploadModule {\n    static forRoot(uploadOptions?: UploadOptions,\n                   dropTargetOptions?: DropTargetOptions,\n                   loggerOptions?: LoggerOptions): ModuleWithProviders {\n\n        return {\n            ngModule: NgxUploadModule,\n            providers: [\n\n                {provide: NGX_LOGGER_OPTIONS, useValue: (loggerOptions) ? loggerOptions : ngxloggerOptions},\n                {\n                    provide: NGX_DROP_TARGET_OPTIONS,\n                    useValue: (dropTargetOptions) ? dropTargetOptions : ngxDropTargetOptions\n                },\n                {provide: NGX_UPLOAD_OPTIONS, useValue: (uploadOptions) ? uploadOptions : ngxUploadOptions},\n                {\n                    provide: NgxUploadLogger,\n                    useFactory: _loggerFactory,\n                    deps: [NGX_LOGGER_OPTIONS]\n                },\n                XhrUploadService,\n                HttpClientUploadService\n            ]\n        }\n\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestModule.html":{"url":"modules/TestModule.html","title":"module - TestModule","body":"\n                   \n\n\n\n\n  Modules\n  TestModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestModule\n\n\n\ncluster_TestModule_declarations\n\n\n\n\nTestComponent\n\nTestComponent\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nTestComponent->TestModule\n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/directives/test.component.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TestComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { Component, NgModule } from '@angular/core';\n\n\n@Component({\n    template: `\n                   Drop files here to upload\n               `\n\n})\nexport class TestComponent { }\n\n\n@NgModule({declarations: [TestComponent]})\nexport class TestModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    coverage/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  ngx-upload\n\n  \n    \n      \n        Home (current)\n      \n      \n        With Bootstrap\n        \n          Simple file upload\n        \n      \n\n      \n        With Material\n        \n          Simple file upload\n        \n      \n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ngx-upload                    Home (current)                    With Bootstrap                  Simple file upload                            With Material                  Simple file upload                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'TestComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgxDragAndDropDirective', 'selector': '[ngxDragAndDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleBootstrapComponent.html":{"url":"components/SimpleBootstrapComponent.html","title":"component - SimpleBootstrapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleBootstrapComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    coverage/src/app/bootstrap/simple.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                simple.component.css\n            \n\n\n\n            \n                templateUrl\n                ./simple.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 model\n                            \n                            \n                                Public uploader\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 onDrop\n                            \n                            \n                                 parseFile\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(uploader: UploadService)\n                        \n                    \n                            \n                                \n                                    Defined in coverage/src/app/bootstrap/simple.component.ts:12\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      uploader\n                                                      \n                                                                UploadService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             onDrop\n                        \n                    \n                    \n                        \n    onDrop(data: File)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in coverage/src/app/bootstrap/simple.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      data\n                                                      \n                                                              File\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             parseFile\n                        \n                    \n                    \n                        \n    parseFile(file: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in coverage/src/app/bootstrap/simple.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      file\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     string\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             model\n                        \n                    \n                    \n                        \n                            model:     Person\n    \n                        \n                    \n                        \n                            \n                                Type :     Person\n    \n                            \n                        \n                            \n                                \n                                    Defined in coverage/src/app/bootstrap/simple.component.ts:12\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public uploader\n                        \n                    \n                    \n                        \n                            uploader:     UploadService\n    \n                        \n                    \n                        \n                            \n                                Type :     UploadService\n    \n                            \n                        \n                            \n                                \n                                    Defined in coverage/src/app/bootstrap/simple.component.ts:14\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UploadService} from '@wKoza/ngx-upload';\nimport {Person} from './person.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './simple.component.html',\n  styleUrls: ['./simple.component.css']\n})\nexport class SimpleBootstrapComponent implements OnInit {\n\n  model: Person;\n\n  constructor(public uploader: UploadService) {\n  }\n\n  ngOnInit() {\n    this.model = new Person();\n  }\n\n\n  onDrop(data: File) {\n    console.log('dropped:', this.parseFile(data[0]))\n  }\n\n\n  parseFile(file) {\n    return (`File information: ${file.name} | type: ${file.type} | size: ${file.size} bytes`);\n  }\n\n\n}\n\n    \n\n    \n        \nSimple upload example with Bootstrap\n\n\n\n\n  Name\n  \n    \n  \n\n\n  Email\n  \n    \n  \n\n\n\n\n  \n    Add files\n    \n      \n        Drop files here to upload\n      \n    \n  \n\n  \n    Upload queue 0\"> - {{ uploader.queue.length }} item(s)\n\n    \n      \n        \n      \n      \n        \n          Upload all\n        \n        \n           Cancel all\n        \n        \n           Remove all\n        \n      \n    \n    \n\n      \n        \n        \n          Name\n          Size\n          Progress\n          Actions\n        \n        \n        \n        \n          {{ itemFile.file.name }}\n          {{ itemFile.file.size/1024/1024 | number:'1.0-2' }} MB\n          \n            \n              \n            \n          \n          \n            \n               Upload\n            \n            \n             Cancel\n            \n            \n              Remove\n            \n          \n        \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Simple upload example with Bootstrap  Name          Email              Add files                  Drop files here to upload                  Upload queue 0\"> - {{ uploader.queue.length }} item(s)                                                Upload all                           Cancel all                           Remove all                                                      Name          Size          Progress          Actions                                          {{ itemFile.file.name }}          {{ itemFile.file.size/1024/1024 | number:\\'1.0-2\\' }} MB                                                                                               Upload                                     Cancel                                      Remove                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'TestComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgxDragAndDropDirective', 'selector': '[ngxDragAndDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleBootstrapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleMaterialComponent.html":{"url":"components/SimpleMaterialComponent.html","title":"component - SimpleMaterialComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleMaterialComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    coverage/src/app/material/simple.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                simple.component.css\n            \n\n\n\n            \n                templateUrl\n                ./simple.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 model\n                            \n                            \n                                 options\n                            \n                            \n                                Public uploader\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 onDrop\n                            \n                            \n                                 parseFile\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(uploader: UploadService)\n                        \n                    \n                            \n                                \n                                    Defined in coverage/src/app/material/simple.component.ts:19\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      uploader\n                                                      \n                                                                UploadService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             onDrop\n                        \n                    \n                    \n                        \n    onDrop(data: File)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in coverage/src/app/material/simple.component.ts:29\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      data\n                                                      \n                                                              File\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             parseFile\n                        \n                    \n                    \n                        \n    parseFile(file: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in coverage/src/app/material/simple.component.ts:34\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      file\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     string\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             model\n                        \n                    \n                    \n                        \n                            model:     Person\n    \n                        \n                    \n                        \n                            \n                                Type :     Person\n    \n                            \n                        \n                            \n                                \n                                    Defined in coverage/src/app/material/simple.component.ts:13\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             options\n                        \n                    \n                    \n                        \n                            options:     DropTargetOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     DropTargetOptions\n    \n                            \n                        \n                            \n                                \n                                    Defined in coverage/src/app/material/simple.component.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public uploader\n                        \n                    \n                    \n                        \n                            uploader:     UploadService\n    \n                        \n                    \n                        \n                            \n                                Type :     UploadService\n    \n                            \n                        \n                            \n                                \n                                    Defined in coverage/src/app/material/simple.component.ts:21\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UploadService} from '@wKoza/ngx-upload';\nimport {Person} from './person.model';\nimport {DropTargetOptions} from '@wKoza/ngx-upload';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './simple.component.html',\n  styleUrls: ['./simple.component.css']\n})\nexport class SimpleMaterialComponent implements OnInit {\n\n  model: Person;\n\n  options: DropTargetOptions = {\n    color : 'green',\n    colorDrag : 'purple',\n    colorDrop : 'green'\n  };\n\n  constructor(public uploader: UploadService) {\n  }\n\n  ngOnInit() {\n    this.model = new Person();\n  }\n\n\n  onDrop(data: File) {\n    console.log('dropped:', this.parseFile(data[0]))\n  }\n\n\n  parseFile(file) {\n    return (`File information: ${file.name} | type: ${file.type} | size: ${file.size} bytes`);\n  }\n\n}\n\n    \n\n    \n        \n  Simple upload example with Material\n  \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      Add files\n      \n        \n          Drop files here to upload\n        \n      \n    \n\n    \n      Upload queue 0\"> - {{ uploader.queue.length }} item(s)\n\n      \n        \n\n\n          \n          \n\n\n        \n        \n          \n            Upload all\n          \n          \n            Cancel all\n          \n          \n            Remove all\n          \n        \n      \n      \n\n\n        \n          \n            \n            \n              Name\n              Size\n              Progress\n              Actions\n            \n            \n            \n            \n              {{ itemFile.file.name }}\n              {{ itemFile.file.size/1024/1024 | number:'1.0-2' }} MB\n              \n                \n                  \n                  \n                \n              \n              \n                \n                  Upload\n                \n                \n                  Cancel\n                \n                \n                  Remove\n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Simple upload example with Material                                                                          Add files                        Drop files here to upload                            Upload queue 0\"> - {{ uploader.queue.length }} item(s)                                                                        Upload all                                Cancel all                                Remove all                                                                                      Name              Size              Progress              Actions                                                              {{ itemFile.file.name }}              {{ itemFile.file.size/1024/1024 | number:\\'1.0-2\\' }} MB                                                                                                                                                Upload                                                  Cancel                                                  Remove                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'TestComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgxDragAndDropDirective', 'selector': '[ngxDragAndDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleMaterialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestComponent.html":{"url":"components/TestComponent.html","title":"component - TestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    test/directives/test.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                                   Drop files here to upload\n               \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, NgModule } from '@angular/core';\n\n\n@Component({\n    template: `\n                   Drop files here to upload\n               `\n\n})\nexport class TestComponent { }\n\n\n@NgModule({declarations: [TestComponent]})\nexport class TestModule { }\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   Drop files here to upload               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleBootstrapComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'SimpleMaterialComponent', 'selector': 'app-root'},{'name': 'TestComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'NgxDragAndDropDirective', 'selector': '[ngxDragAndDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragAndDropDirective.html":{"url":"directives/NgxDragAndDropDirective.html","title":"directive - NgxDragAndDropDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxDragAndDropDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/directives/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Transforms a node into a drag and drop zone.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ngxDragAndDrop]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         uploader\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         ngOnInit\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formBinded\n                                    \n                                    \n                                        ngxDragAndDrop\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        onDrop\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragleave\n                                    \n                                    \n                                        dragover\n                                    \n                                    \n                                        drop\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(el: ElementRef, renderer: Renderer2, injector: Injector, logger: NgxUploadLogger, dropOptions: DropTargetOptions, uploadOptions: UploadOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              el\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              renderer\n                                                              \n                                                                        Renderer2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              injector\n                                                              \n                                                                        Injector\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              logger\n                                                              \n                                                                        NgxUploadLogger\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              dropOptions\n                                                              \n                                                                        DropTargetOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              uploadOptions\n                                                              \n                                                                        UploadOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    formBinded\n                                \n                                \n                                      \n                                        Type:    NgForm\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:40\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    ngxDragAndDrop\n                                \n                                \n                                \n                            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:33\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    onDrop\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:42\n                                        \n                                    \n                        \n                    \n            \n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                     dragleave\n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragleave(event: DragEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:59\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     dragover\n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragover(event: DragEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:85\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     drop\n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            drop(event: Event)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:67\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnInit\n                                \n                            \n                            \n                                \n            ngOnInit()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:44\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     uploader\n                                \n                            \n                            \n                                \n                                    uploader:     AbstractUploadService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AbstractUploadService\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/directives/dropzone.directive.ts:30\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnInit,\n    Output,\n    Renderer2,\n    Inject, Injector\n} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {\n    DropTargetOptions, NGX_DROP_TARGET_OPTIONS, NGX_UPLOAD_OPTIONS,\n    UploadOptions\n} from '../utils/configuration.model';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { AbstractUploadService } from '../services/abstractUpload.service';\n\n\n/**\n * Transforms a node into a drag and drop zone.\n */\n@Directive({\n    selector: '[ngxDragAndDrop]',\n    exportAs: 'ngxDragAndDrop'\n})\nexport class NgxDragAndDropDirective implements OnInit {\n\n    uploader: AbstractUploadService;\n\n    @Input()\n    set ngxDragAndDrop(dropOptions: DropTargetOptions) {\n        if (dropOptions) {\n            this.logger.debug(JSON.stringify(dropOptions));\n            this.dropOptions = dropOptions;\n        }\n    }\n\n    @Input() formBinded: NgForm;\n\n    @Output() onDrop = new EventEmitter();\n\n    ngOnInit(): void {\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.color);\n        this.logger.info('strategy : ' + this.uploadOptions.httpStrategy !.toString());\n        this.uploader = this.injector.get(this.uploadOptions.httpStrategy);\n    }\n\n    constructor(private el: ElementRef,\n                private renderer: Renderer2,\n                private injector: Injector,\n                private logger: NgxUploadLogger,\n                @Inject(NGX_DROP_TARGET_OPTIONS) private dropOptions: DropTargetOptions,\n                @Inject(NGX_UPLOAD_OPTIONS) private uploadOptions: UploadOptions) {\n    }\n\n\n    @HostListener('dragleave', ['$event']) onDragLeave(event: DragEvent) {\n        this.logger.debug('dragleave event');\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrag);\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrop);\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.color);\n        this.stopAndPrevent(event);\n    }\n\n    @HostListener('drop', ['$event']) dropEvent(event: Event) {\n        this.logger.debug('drop event');\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.color);\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrag);\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.colorDrop);\n        const transfer = this.getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        const droppedFiles = transfer.files;\n        transfer.dropEffect = 'copy';\n        this.onDrop.next(droppedFiles);\n        this.stopAndPrevent(event);\n        this.uploader.addToQueue(transfer.files, this.formBinded ? this.formBinded.form : null);\n    }\n\n\n    @HostListener('dragover', ['$event'])\n    onDragOver(event: DragEvent) {\n        this.logger.debug('dragover event');\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.color);\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrop);\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.colorDrag);\n        const transfer = this.getTransfer(event);\n        if (!this.haveFiles(transfer.types)) {\n            return;\n        }\n        this.stopAndPrevent(event);\n    }\n\n    private stopAndPrevent(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    private getTransfer(event): DataTransfer {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    }\n\n    private haveFiles(types: any): boolean {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        } else if (types.contains) {\n            return types.contains('Files');\n        } else {\n            return false;\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientUploadService.html":{"url":"injectables/HttpClientUploadService.html","title":"injectable - HttpClientUploadService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientUploadService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/httpClientUpload.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         uploadFileItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(logger: NgxUploadLogger, options: UploadOptions, httpClient: HttpClient)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/httpClientUpload.service.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              logger\n                                                              \n                                                                        NgxUploadLogger\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        UploadOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              httpClient\n                                                              \n                                                                        HttpClient\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     uploadFileItem\n                                \n                            \n                            \n                                \n            uploadFileItem(fileItem: FileItem, options?: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/httpClientUpload.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fileItem\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { FileItem } from './fileItem.model';\nimport { Observable } from 'rxjs/Observable';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { NGX_UPLOAD_OPTIONS, UploadOptions } from '../utils/configuration.model';\nimport { HttpClient, HttpErrorResponse, HttpEventType, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { AbstractUploadService } from './abstractUpload.service';\n\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\n\n// send an event for each upload event. These events can be catched by the user for call a callback\n\n@Injectable()\nexport class HttpClientUploadService extends AbstractUploadService {\n\n    constructor(protected logger: NgxUploadLogger,\n                @Inject(NGX_UPLOAD_OPTIONS) options: UploadOptions,\n                private httpClient: HttpClient) {\n        super(logger, options);\n    }\n\n\n    uploadFileItem(fileItem: FileItem, options?: any): Observable {\n\n        this.logger.info('enter uploadService.uploadFileItem()');\n\n        const index = this.queue.indexOf(fileItem);\n        const item = this.queue[index];\n\n        this.onBeforeUploadItem(item);\n\n        if (item.isCancel) {\n            return Observable.of();\n        }\n\n        item.isUploading = true;\n        this.isUploading = true;\n\n        const sendable = item.formData;\n        sendable.append(item.alias, item.file, item.file.name);\n\n        const req = new HttpRequest(this.method, this.url, sendable, options);\n\n        return this.httpClient.request(req).do(event => {\n\n            if (event.type === HttpEventType.UploadProgress) {\n                // This is an upload progress event. Compute and show the % done:\n                const percentDone = Math.round(event.loaded * 100 / (event.total ? event.total : event.loaded));\n                this.logger.debug(`File is ${percentDone}% uploaded.`);\n                const total = this.getTotalProgress(percentDone);\n                this.logger.debug('progress : ' + total);\n                fileItem.ɵonProgress(total);\n                this.onProgressItem(item, percentDone);\n\n            } else if (event instanceof HttpResponse) {\n                // A successful response is delivered on the event stream.\n                item.ɵonSuccess(event.body, event.status, event.headers);\n                this.onSuccess(item, event.body, event.status, event.headers);\n\n            }\n        }).catch((err) => {\n            if (err instanceof HttpErrorResponse) {\n                if (this.url === 'ngx_upload_mock') {\n                    item.ɵonSuccess(err.message, err.status, err.headers);\n                    this.onSuccess(item, err.message, err.status, err.headers);\n                } else if (err.error instanceof Error) {\n                    // A client-side or network error occurred. Handle it accordingly.\n                    item.ɵonError(err.error.message, err.status, err.headers);\n                    this.onError(item, err.error.message, err.status, err.headers);\n                } else {\n                    // The backend returned an unsuccessful response code.\n                    // The response body may contain clues as to what went wrong,\n                    item.ɵonError(err.error, err.status, err.headers);\n                    this.onError(item, err.error, err.status, err.headers);\n                }\n            }\n            throw err;\n        });\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientUploadServiceMock.html":{"url":"injectables/HttpClientUploadServiceMock.html","title":"injectable - HttpClientUploadServiceMock","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientUploadServiceMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            test/mocks/httpClientUpload.service.mock.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         uploadFileItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(logger: NgxUploadLogger, options: UploadOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in test/mocks/httpClientUpload.service.mock.ts:11\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              logger\n                                                              \n                                                                        NgxUploadLogger\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        UploadOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     uploadFileItem\n                                \n                            \n                            \n                                \n            uploadFileItem(fileItem: FileItem, options?: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in test/mocks/httpClientUpload.service.mock.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fileItem\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/observable/empty';\nimport { AbstractUploadService } from '../../src/services/abstractUpload.service';\nimport { NgxUploadLogger } from '../../src/utils/logger.model';\nimport { NGX_UPLOAD_OPTIONS, UploadOptions } from '../../src/utils/configuration.model';\nimport { FileItem } from '../../src/services/fileItem.model';\n\n@Injectable()\nexport class HttpClientUploadServiceMock extends AbstractUploadService {\n\n    constructor(protected logger: NgxUploadLogger,\n                @Inject(NGX_UPLOAD_OPTIONS) options: UploadOptions) {\n        super(logger, options);\n    }\n\n\n    uploadFileItem(fileItem: FileItem, options?: any): Observable {\n        return Observable.empty();\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockLogger.html":{"url":"injectables/MockLogger.html","title":"injectable - MockLogger","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MockLogger\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            test/mocks/logger.model.mock.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         output\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         debug\n                                    \n                                    \n                                         error\n                                    \n                                    \n                                         info\n                                    \n                                    \n                                         log\n                                    \n                                    \n                                         warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     debug\n                                \n                            \n                            \n                                \n            debug(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in test/mocks/logger.model.mock.ts:31\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     error\n                                \n                            \n                            \n                                \n            error(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in test/mocks/logger.model.mock.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     info\n                                \n                            \n                            \n                                \n            info(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in test/mocks/logger.model.mock.ts:27\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n            log(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in test/mocks/logger.model.mock.ts:15\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     warn\n                                \n                            \n                            \n                                \n            warn(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in test/mocks/logger.model.mock.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     output\n                                \n                            \n                            \n                                \n                                    output:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in test/mocks/logger.model.mock.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgxUploadLogger } from '../../src/utils/logger.model';\n\n@Injectable()\nexport class MockLogger implements NgxUploadLogger {\n\n    output: any = {\n        log: [] ,\n        error: [],\n        warn: [],\n        info: [],\n        debug: []\n    };\n\n    log(...args: any[]) {\n        this.output.log.push(...args);\n    }\n\n    error(...args: any[]) {\n        this.output.error.push(...args);\n    }\n\n    warn(...args: any[]) {\n        this.output.warn.push(...args);\n    }\n\n    info(...args: any[]) {\n        this.output.info.push(...args);\n    }\n\n    debug(...args: any[]) {\n        this.output.debug.push(...args);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XhrUploadService.html":{"url":"injectables/XhrUploadService.html","title":"injectable - XhrUploadService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  XhrUploadService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/xhrUpload.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         uploadFileItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(logger: NgxUploadLogger, options: UploadOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/xhrUpload.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              logger\n                                                              \n                                                                        NgxUploadLogger\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        UploadOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     uploadFileItem\n                                \n                            \n                            \n                                \n            uploadFileItem(fileItem: FileItem)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/xhrUpload.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fileItem\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { FileItem } from './fileItem.model';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { NGX_UPLOAD_OPTIONS, UploadOptions } from '../utils/configuration.model';\nimport { AbstractUploadService } from './abstractUpload.service';\n\nimport 'rxjs/add/observable/of';\n\n\n// send an event for each upload event. These events can be catched by the user for call a callback\n\n\n@Injectable()\nexport class XhrUploadService extends AbstractUploadService {\n\n\n    constructor(protected logger: NgxUploadLogger, @Inject(NGX_UPLOAD_OPTIONS) options: UploadOptions) {\n        super(logger, options);\n    }\n\n\n    uploadFileItem(fileItem: FileItem): Observable {\n\n        this.logger.info('enter uploadService.uploadFileItem()');\n\n        const index = this.queue.indexOf(fileItem);\n        const item = this.queue[index];\n\n        this.onBeforeUploadItem(item);\n\n        if (item.isCancel) {\n            return Observable.of();\n        }\n\n        item.isUploading = true;\n        this.isUploading = true;\n\n        return new Observable((responseObserver: Observer) => {\n\n            const xhr = item.ɵxhr = new XMLHttpRequest();\n            xhr.open(this.method, this.url, true);\n\n            if (!!this.withCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            // Add all the requested headers.\n            this.headers.forEach((values, name) => {\n                xhr.setRequestHeader(name, values.join(','));\n            });\n\n            /** load event */\n            const onLoad = () => {\n\n                const ok = xhr.status >= 200 && xhr.status  {\n                responseObserver.error(xhr.response);\n                this.onError(item, xhr.response, xhr.status, xhr.getAllResponseHeaders());\n            };\n\n            /**\n             * Les évènements d'envoi (upload) sont lancés sur l'objet XMLHttpRequest.upload\n             * @param event\n             */\n            const onProgress = (event) => {\n                const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this.logger.debug('progress : ' + progress);\n                // this.onProgressItem(item, progress);\n            };\n\n\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            xhr.upload.addEventListener('progress', onProgress);\n\n            let sendable;\n\n\n            if (!this.disableMultipart) {\n                sendable = item.formData;\n                sendable.append(item.alias, item.file, item.file.name);\n            } else {\n                this.logger.debug(item.file);\n                sendable = item.file;\n            }\n\n            xhr.send(sendable);\n\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                xhr.upload.removeEventListener('progress', onProgress);\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUploadService.html":{"url":"classes/AbstractUploadService.html","title":"class - AbstractUploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUploadService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/abstractUpload.service.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         disableMultipart\n                                    \n                                    \n                                        Protected headers\n                                    \n                                    \n                                         isUploading\n                                    \n                                    \n                                         method\n                                    \n                                    \n                                        Public onBeforeUploadItem$\n                                    \n                                    \n                                        Public onCancel$\n                                    \n                                    \n                                        Public onError$\n                                    \n                                    \n                                        Public onProgress$\n                                    \n                                    \n                                        Public onSuccess$\n                                    \n                                    \n                                         progressTotal\n                                    \n                                    \n                                         queue\n                                    \n                                    \n                                         url\n                                    \n                                    \n                                         withCredentials\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         addToQueue\n                                    \n                                    \n                                         cancelAll\n                                    \n                                    \n                                         cancelFileItem\n                                    \n                                    \n                                        Public getNotUploadedItems\n                                    \n                                    \n                                         getTotalProgress\n                                    \n                                    \n                                        Protected onBeforeUploadItem\n                                    \n                                    \n                                        Protected onError\n                                    \n                                    \n                                        Protected onProgressItem\n                                    \n                                    \n                                        Protected onSuccess\n                                    \n                                    \n                                         removeAllFromQueue\n                                    \n                                    \n                                         removeFromQueue\n                                    \n                                    \n                                         uploadAll\n                                    \n                                    \n                                         uploadFileItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(logger: NgxUploadLogger, options: UploadOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              logger\n                                                              \n                                                                        NgxUploadLogger\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        UploadOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     addToQueue\n                                \n                            \n                            \n                                \n            addToQueue(files: FileList, formGroup?: FormGroup | null)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:43\n                                        \n                                    \n            \n                            \n                                \n                                        Adds files to the queue\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              files\n                                                              \n                                                                      FileList\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              formGroup\n                                                              \n                                                                      FormGroup | null\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     cancelAll\n                                \n                            \n                            \n                                \n            cancelAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:92\n                                        \n                                    \n            \n                            \n                                \n                                        Uploads all not uploaded items of queue\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     cancelFileItem\n                                \n                            \n                            \n                                \n            cancelFileItem(fileItem: FileItem)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:66\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fileItem\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getNotUploadedItems\n                                \n                            \n                            \n                                \n                                        \n                                    getNotUploadedItems()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:131\n                                        \n                                    \n            \n                            \n                                \n                                        Returns not uploaded items\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getTotalProgress\n                                \n                            \n                            \n                                \n            getTotalProgress(value?: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:142\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the total progress\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected onBeforeUploadItem\n                                \n                            \n                            \n                                \n                                        \n                                    onBeforeUploadItem(item: FileItem)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:159\n                                        \n                                    \n            \n                            \n                                \n                                        Prepares file status before upload\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              item\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected onError\n                                \n                            \n                            \n                                \n                                        \n                                    onError(item: FileItem, body: any, status: number, headers: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:182\n                                        \n                                    \n            \n                            \n                                \n                                        Callback called when an upload error occurs\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              item\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              body\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected onProgressItem\n                                \n                            \n                            \n                                \n                                        \n                                    onProgressItem(item: FileItem, progress: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:170\n                                        \n                                    \n            \n                            \n                                \n                                        Update status during upload progress\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              item\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              progress\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected onSuccess\n                                \n                            \n                            \n                                \n                                        \n                                    onSuccess(item: FileItem, body: any, status: number, headers: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:193\n                                        \n                                    \n            \n                            \n                                \n                                        Callback called when an upload success occurs\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              item\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              body\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     removeAllFromQueue\n                                \n                            \n                            \n                                \n            removeAllFromQueue()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:106\n                                        \n                                    \n            \n                            \n                                \n                                        Uploads all not uploaded items of queue\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     removeFromQueue\n                                \n                            \n                            \n                                \n            removeFromQueue(fileItem: FileItem)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:117\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fileItem\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     uploadAll\n                                \n                            \n                            \n                                \n            uploadAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:78\n                                        \n                                    \n            \n                            \n                                \n                                        Uploads all not uploaded items of queue\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     uploadFileItem\n                                \n                            \n                            \n                                \n                                        \n                                    uploadFileItem(fileItem: FileItem, options?: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:63\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fileItem\n                                                              \n                                                                      FileItem\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     disableMultipart\n                                \n                            \n                            \n                                \n                                    disableMultipart:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected headers\n                                \n                            \n                            \n                                \n                                    headers:     Map\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Map\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                    Internal map of lowercase header names to values.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isUploading\n                                \n                            \n                            \n                                \n                                    isUploading:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     method\n                                \n                            \n                            \n                                \n                                    method:     Method\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Method\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onBeforeUploadItem$\n                                \n                            \n                            \n                                \n                                    onBeforeUploadItem$:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:27\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onCancel$\n                                \n                            \n                            \n                                \n                                    onCancel$:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:24\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onError$\n                                \n                            \n                            \n                                \n                                    onError$:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:25\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onProgress$\n                                \n                            \n                            \n                                \n                                    onProgress$:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:28\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onSuccess$\n                                \n                            \n                            \n                                \n                                    onSuccess$:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:26\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     progressTotal\n                                \n                            \n                            \n                                \n                                    progressTotal:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     queue\n                                \n                            \n                            \n                                \n                                    queue:     FileItem[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     FileItem[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     url\n                                \n                            \n                            \n                                \n                                    url:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     withCredentials\n                                \n                            \n                            \n                                \n                                    withCredentials:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/abstractUpload.service.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { FileItem } from './fileItem.model';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup } from '@angular/forms';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { Method, UploadOptions } from '../utils/configuration.model';\nimport { Subject } from 'rxjs/Subject';\n\n\nexport abstract class AbstractUploadService {\n\n    queue: FileItem[];\n    isUploading: boolean;\n    progressTotal = 0;\n    method: Method;\n    url: string;\n    disableMultipart: boolean;\n    withCredentials: boolean;\n\n    /**\n     * Internal map of lowercase header names to values.\n     */\n    protected headers: Map;\n\n    public onCancel$ = new Subject();\n    public onError$ = new Subject();\n    public onSuccess$ = new Subject(); // TODO headers n'est pas any mais Array\n    public onBeforeUploadItem$ = new Subject();\n    public onProgress$ = new Subject(); // https://embed.plnkr.co/P8xCEwSKgcOg07pwDrlO/\n\n\n    constructor(protected logger: NgxUploadLogger, options: UploadOptions) {\n        this.queue = new Array();\n        this.isUploading = false;\n        this.method = options.method !;\n        this.url = options.url;\n        this.headers = new Map();\n        this.disableMultipart = false;\n    }\n\n    /**\n     * Adds files to the queue\n     */\n    addToQueue(files: FileList, formGroup?: FormGroup | null) {\n\n        this.logger.info('add to queue');\n\n        for (let i = 0; i  {\n                    fileItem.formData.append(key, formGroup.get(key) !.value);\n                });\n            }\n\n            this.queue.push(fileItem);\n        }\n\n    }\n\n\n    abstract uploadFileItem(fileItem: FileItem, options?: any): Observable;\n\n\n    cancelFileItem(fileItem: FileItem) {\n        fileItem.isCancel = true;\n        if (fileItem.isUploading) {\n            fileItem.ɵxhr.abort();\n        }\n        fileItem.ɵonCancel(fileItem.ɵxhr.response, fileItem.ɵxhr.status, fileItem.ɵxhr.response.headers);\n        this.onCancel$.next(fileItem)\n    }\n\n    /**\n     * Uploads all not uploaded items of queue\n     */\n    uploadAll() {\n        const items = this.getNotUploadedItems().filter(item => !item.isUploading);\n        if (!items.length) {\n            return;\n        }\n\n        for (const item of items) {\n            item.upload();\n        }\n    }\n\n    /**\n     * Uploads all not uploaded items of queue\n     */\n    cancelAll() {\n        const items: FileItem[] = this.getNotUploadedItems();\n        if (!items.length) {\n            return;\n        }\n\n        for (const item of items) {\n            item.cancel();\n        }\n    }\n\n    /**\n     * Uploads all not uploaded items of queue\n     */\n    removeAllFromQueue() {\n        const items: FileItem[] = this.getNotUploadedItems();\n        if (!items.length) {\n            return;\n        }\n\n        for (const item of items) {\n            this.removeFromQueue(item);\n        }\n    }\n\n    removeFromQueue(fileItem: FileItem) {\n        const index = this.queue.indexOf(fileItem);\n        const item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progressTotal = this.getTotalProgress();\n    }\n\n    /**\n     * Returns not uploaded items\n     * @returns {Array}\n     */\n    public getNotUploadedItems() {\n        return this.queue.filter(item => !item.isUploaded);\n    }\n\n\n    /**\n     * Returns the total progress\n     * @param {Number} [value]\n     * @returns {Number}\n     * @private\n     */\n    getTotalProgress(value?) {\n\n        const notUploaded = this.getNotUploadedItems().length;\n        const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        const ratio = 100 / this.queue.length;\n        const current = (value || 0) * ratio / 100;\n\n        this.logger.info('getTotalProgress : ' + Math.round(uploaded * ratio + current));\n\n        return Math.round(uploaded * ratio + current);\n    }\n\n\n    /**\n     * Prepares file status before upload\n     * @param item\n     */\n    protected onBeforeUploadItem(item: FileItem) {\n        this.logger.info('enter uploadService.ɵonBeforeUploadItem()');\n        item.ɵonBeforeUploadItem();\n        this.onBeforeUploadItem$.next(item);\n    }\n\n    /**\n     * Update status during upload progress\n     * @param item\n     * @param progress\n     */\n    protected onProgressItem(item: FileItem, progress: number): void {\n        this.logger.info(`call onProgressItem ${item} ${progress}`);\n        this.progressTotal = this.getTotalProgress(progress);\n        item.ɵonProgress(progress);\n        this.onProgress$.next({item, progress});\n    }\n\n    /**\n     * Callback called when an upload error occurs\n     * @param item\n     * @param xhr\n     */\n    protected onError(item: FileItem, body: any, status: number, headers: any) {\n        this.logger.info(`call onError ${item} ${body} ${status} ${headers}`);\n        item.ɵonError(body, status, headers);\n        this.onError$.next({item, body, status, headers});\n    }\n\n    /**\n     * Callback called when an upload success occurs\n     * @param item\n     * @param xhr\n     */\n    protected onSuccess(item: FileItem, body: any, status: number, headers: any) { // TODO headers n'est pas any\n        this.logger.info(`call onSuccess ${item} ${body} ${status} ${headers}`);\n        item.ɵonSuccess(body, status, headers);\n        this.onSuccess$.next({item, body, status, headers});\n    }\n\n\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLogger.html":{"url":"classes/ConsoleLogger.html","title":"class - ConsoleLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLogger\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/logger.model.ts\n        \n\n            \n                Description\n            \n            \n                Default implementation of Logger that safely writes the message into the console.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxUploadLogger\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         debug\n                                    \n                                    \n                                         error\n                                    \n                                    \n                                         info\n                                    \n                                    \n                                         log\n                                    \n                                    \n                                         warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(_console: Console, _debugEnabled: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              _console\n                                                              \n                                                                        Console\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              _debugEnabled\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     debug\n                                \n                            \n                            \n                                \n            debug(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:40\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     error\n                                \n                            \n                            \n                                \n            error(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     info\n                                \n                            \n                            \n                                \n            info(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:34\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n            log(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:32\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     warn\n                                \n                            \n                            \n                                \n            warn(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:36\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export abstract class NgxUploadLogger {\n    /** Write a log message. */\n    abstract log(...args: any[]): void;\n\n    /** Write an information message. */\n    abstract info(...args: any[]): void;\n\n    /** Write a warning message. */\n    abstract warn(...args: any[]): void;\n\n    /** Write an error message. */\n    abstract error(...args: any[]): void;\n\n    /** Write a debug message. */\n    abstract debug(...args: any[]): void;\n\n}\n\nconst noop = (): any => undefined;\n\n/**\n * Default implementation of Logger that safely writes the message into the console.\n *\n */\nexport class ConsoleLogger implements NgxUploadLogger {\n    constructor(private _console: Console, private _debugEnabled = true) {}\n\n    log(...args: any[]): void { this._invokeConsoleMethod('log', args); }\n\n    info(...args: any[]): void { this._invokeConsoleMethod('info', args); }\n\n    warn(...args: any[]): void { this._invokeConsoleMethod('warn', args); }\n\n    error(...args: any[]): void { this._invokeConsoleMethod('error', args); }\n\n    debug(...args: any[]): void {\n        if (this._debugEnabled) { this._invokeConsoleMethod('debug', args); }\n    }\n\n    private _invokeConsoleMethod(type: string, args?: any[]): void {\n        let logFn: Function = (this._console)[type] || this._console.log || noop;\n\n        // console methods in IE9 don't have 'apply' method, polyfill it\n        if (!logFn.apply) {\n            logFn = Function.prototype.bind.call(logFn, this._console);\n        }\n\n        logFn.apply(this._console, args);\n    }\n}\n\n/**\n * No op implementation of Logger.\n *\n */\nexport class NoOpLogger implements NgxUploadLogger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileItem.html":{"url":"classes/FileItem.html","title":"class - FileItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  FileItem\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/fileItem.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         alias\n                                    \n                                    \n                                        Public file\n                                    \n                                    \n                                         formData\n                                    \n                                    \n                                         isCancel\n                                    \n                                    \n                                         isError\n                                    \n                                    \n                                         isReady\n                                    \n                                    \n                                         isSuccess\n                                    \n                                    \n                                         isUploaded\n                                    \n                                    \n                                         isUploading\n                                    \n                                    \n                                         ɵxhr\n                                    \n                                    \n                                         progress\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         cancel\n                                    \n                                    \n                                         onBeforeUpload\n                                    \n                                    \n                                         onCancel\n                                    \n                                    \n                                         onError\n                                    \n                                    \n                                         onProgress\n                                    \n                                    \n                                         onSuccess\n                                    \n                                    \n                                         ɵonBeforeUploadItem\n                                    \n                                    \n                                         ɵonCancel\n                                    \n                                    \n                                         ɵonError\n                                    \n                                    \n                                         ɵonProgress\n                                    \n                                    \n                                         ɵonSuccess\n                                    \n                                    \n                                         remove\n                                    \n                                    \n                                         upload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(file: File, uploadService: AbstractUploadService, logger: NgxUploadLogger)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              file\n                                                              \n                                                                        File\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              uploadService\n                                                              \n                                                                        AbstractUploadService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              logger\n                                                              \n                                                                        NgxUploadLogger\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     cancel\n                                \n                            \n                            \n                                \n            cancel()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:34\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onBeforeUpload\n                                \n                            \n                            \n                                \n            onBeforeUpload()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:97\n                                        \n                                    \n            \n                            \n                                \n                                        Callback\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onCancel\n                                \n                            \n                            \n                                \n            onCancel(response: , status: , headers: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:111\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onError\n                                \n                            \n                            \n                                \n            onError(response: , status: , headers: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:107\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onProgress\n                                \n                            \n                            \n                                \n            onProgress(progress: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:100\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              progress\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onSuccess\n                                \n                            \n                            \n                                \n            onSuccess(response: , status: , headers: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:103\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ɵonBeforeUploadItem\n                                \n                            \n                            \n                                \n            ɵonBeforeUploadItem()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:44\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ɵonCancel\n                                \n                            \n                            \n                                \n            ɵonCancel(response: , status: , headers: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:82\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ɵonError\n                                \n                            \n                            \n                                \n            ɵonError(response: , status: , headers: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:71\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ɵonProgress\n                                \n                            \n                            \n                                \n            ɵonProgress(progress: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:55\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              progress\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ɵonSuccess\n                                \n                            \n                            \n                                \n            ɵonSuccess(response: , status: , headers: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:60\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     remove\n                                \n                            \n                            \n                                \n            remove()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:39\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     upload\n                                \n                            \n                            \n                                \n            upload()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     alias\n                                \n                            \n                            \n                                \n                                    alias:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : file\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public file\n                                \n                            \n                            \n                                \n                                    file:     File\n            \n                                \n                            \n                                \n                                    \n                                        Type :     File\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     formData\n                                \n                            \n                            \n                                \n                                    formData:     FormData\n            \n                                \n                            \n                                \n                                    \n                                        Type :     FormData\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isCancel\n                                \n                            \n                            \n                                \n                                    isCancel:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isError\n                                \n                            \n                            \n                                \n                                    isError:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isReady\n                                \n                            \n                            \n                                \n                                    isReady:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isSuccess\n                                \n                            \n                            \n                                \n                                    isSuccess:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isUploaded\n                                \n                            \n                            \n                                \n                                    isUploaded:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isUploading\n                                \n                            \n                            \n                                \n                                    isUploading:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ɵxhr\n                                \n                            \n                            \n                                \n                                    ɵxhr:     XMLHttpRequest\n            \n                                \n                            \n                                \n                                    \n                                        Type :     XMLHttpRequest\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:18\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     progress\n                                \n                            \n                            \n                                \n                                    progress:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/fileItem.model.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { AbstractUploadService } from './abstractUpload.service';\nimport { NgxUploadLogger } from '../utils/logger.model';\n\nexport class FileItem {\n\n  isUploading: boolean;\n  isReady: boolean;\n  isUploaded: boolean;\n  isSuccess: boolean;\n  isCancel: boolean;\n  isError: boolean;\n  progress = 0;\n\n  formData: FormData = new FormData();\n\n  alias = 'file';\n\n  ɵxhr: XMLHttpRequest;\n\n  constructor(public file: File, private uploadService: AbstractUploadService, protected logger: NgxUploadLogger) {\n  }\n\n  upload() {\n    console.log('upload item');\n    this.uploadService.uploadFileItem(this).subscribe(\n      (res: Response) => this.logger.debug(res.status),\n      (err) => {\n        this.logger.error(err);\n      },\n      () => this.logger.debug('complete')\n    );\n  }\n\n  cancel() {\n    this.logger.debug('upload cancel');\n    this.uploadService.cancelFileItem(this);\n  }\n\n  remove() {\n    this.logger.debug('upload remove');\n    this.uploadService.removeFromQueue(this);\n  }\n\n  ɵonBeforeUploadItem() {\n    this.isReady = true;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n\n  ɵonProgress(progress: number) {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n\n  ɵonSuccess(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.onSuccess(response, status, headers);\n  }\n\n  ɵonError(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.onError(response, status, headers);\n  }\n\n  ɵonCancel(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.onCancel(response, status, headers);\n  }\n\n  /**\n   * Callback\n   * @private\n   */\n  onBeforeUpload() {\n  }\n\n  onProgress(progress: number) {\n  }\n\n  onSuccess(response, status, headers) {\n  }\n\n\n  onError(response, status, headers) {\n  }\n\n\n  onCancel(response, status, headers) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxUploadLogger.html":{"url":"classes/NgxUploadLogger.html","title":"class - NgxUploadLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  NgxUploadLogger\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/logger.model.ts\n        \n\n            \n                Description\n            \n            \n                Simple service for logging the module.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         debug\n                                    \n                                    \n                                         error\n                                    \n                                    \n                                         info\n                                    \n                                    \n                                         log\n                                    \n                                    \n                                         warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     debug\n                                \n                            \n                            \n                                \n                                        \n                                    debug(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        Write a debug message. \n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     error\n                                \n                            \n                            \n                                \n                                        \n                                    error(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Write an error message. \n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     info\n                                \n                            \n                            \n                                \n                                        \n                                    info(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:10\n                                        \n                                    \n            \n                            \n                                \n                                        Write an information message. \n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n                                        \n                                    log(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        Write a log message. \n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     warn\n                                \n                            \n                            \n                                \n                                        \n                                    warn(...args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        Write a warning message. \n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              args\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export abstract class NgxUploadLogger {\n    /** Write a log message. */\n    abstract log(...args: any[]): void;\n\n    /** Write an information message. */\n    abstract info(...args: any[]): void;\n\n    /** Write a warning message. */\n    abstract warn(...args: any[]): void;\n\n    /** Write an error message. */\n    abstract error(...args: any[]): void;\n\n    /** Write a debug message. */\n    abstract debug(...args: any[]): void;\n\n}\n\nconst noop = (): any => undefined;\n\n/**\n * Default implementation of Logger that safely writes the message into the console.\n *\n */\nexport class ConsoleLogger implements NgxUploadLogger {\n    constructor(private _console: Console, private _debugEnabled = true) {}\n\n    log(...args: any[]): void { this._invokeConsoleMethod('log', args); }\n\n    info(...args: any[]): void { this._invokeConsoleMethod('info', args); }\n\n    warn(...args: any[]): void { this._invokeConsoleMethod('warn', args); }\n\n    error(...args: any[]): void { this._invokeConsoleMethod('error', args); }\n\n    debug(...args: any[]): void {\n        if (this._debugEnabled) { this._invokeConsoleMethod('debug', args); }\n    }\n\n    private _invokeConsoleMethod(type: string, args?: any[]): void {\n        let logFn: Function = (this._console)[type] || this._console.log || noop;\n\n        // console methods in IE9 don't have 'apply' method, polyfill it\n        if (!logFn.apply) {\n            logFn = Function.prototype.bind.call(logFn, this._console);\n        }\n\n        logFn.apply(this._console, args);\n    }\n}\n\n/**\n * No op implementation of Logger.\n *\n */\nexport class NoOpLogger implements NgxUploadLogger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoOpLogger.html":{"url":"classes/NoOpLogger.html","title":"class - NoOpLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  NoOpLogger\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/logger.model.ts\n        \n\n            \n                Description\n            \n            \n                No op implementation of Logger.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxUploadLogger\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         debug\n                                    \n                                    \n                                         error\n                                    \n                                    \n                                         info\n                                    \n                                    \n                                         log\n                                    \n                                    \n                                         warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     debug\n                                \n                            \n                            \n                                \n            debug()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:69\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     error\n                                \n                            \n                            \n                                \n            error()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:67\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     info\n                                \n                            \n                            \n                                \n            info()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:63\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n            log()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:61\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     warn\n                                \n                            \n                            \n                                \n            warn()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/utils/logger.model.ts:65\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export abstract class NgxUploadLogger {\n    /** Write a log message. */\n    abstract log(...args: any[]): void;\n\n    /** Write an information message. */\n    abstract info(...args: any[]): void;\n\n    /** Write a warning message. */\n    abstract warn(...args: any[]): void;\n\n    /** Write an error message. */\n    abstract error(...args: any[]): void;\n\n    /** Write a debug message. */\n    abstract debug(...args: any[]): void;\n\n}\n\nconst noop = (): any => undefined;\n\n/**\n * Default implementation of Logger that safely writes the message into the console.\n *\n */\nexport class ConsoleLogger implements NgxUploadLogger {\n    constructor(private _console: Console, private _debugEnabled = true) {}\n\n    log(...args: any[]): void { this._invokeConsoleMethod('log', args); }\n\n    info(...args: any[]): void { this._invokeConsoleMethod('info', args); }\n\n    warn(...args: any[]): void { this._invokeConsoleMethod('warn', args); }\n\n    error(...args: any[]): void { this._invokeConsoleMethod('error', args); }\n\n    debug(...args: any[]): void {\n        if (this._debugEnabled) { this._invokeConsoleMethod('debug', args); }\n    }\n\n    private _invokeConsoleMethod(type: string, args?: any[]): void {\n        let logFn: Function = (this._console)[type] || this._console.log || noop;\n\n        // console methods in IE9 don't have 'apply' method, polyfill it\n        if (!logFn.apply) {\n            logFn = Function.prototype.bind.call(logFn, this._console);\n        }\n\n        logFn.apply(this._console, args);\n    }\n}\n\n/**\n * No op implementation of Logger.\n *\n */\nexport class NoOpLogger implements NgxUploadLogger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            coverage/src/app/bootstrap/person.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public email\n                                    \n                                    \n                                        Public name\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in coverage/src/app/bootstrap/person.model.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in coverage/src/app/bootstrap/person.model.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        export class Person {\n  public name: string;\n  public email: string;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetOptions.html":{"url":"interfaces/DropTargetOptions.html","title":"interface - DropTargetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/configuration.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        colorDrag\n                                \n                                \n                                        colorDrop\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorDrag\n                                    \n                                \n                                \n                                    \n                                        colorDrag:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorDrop\n                                    \n                                \n                                \n                                    \n                                        colorDrop:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:13\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nimport { XhrUploadService } from '../services/xhrUpload.service';\nimport { HttpClientUploadService } from '../services/httpClientUpload.service';\n\nexport type Method = 'POST' | 'GET';\n\nexport type UploadService = typeof XhrUploadService | typeof HttpClientUploadService;\n\nexport interface DropTargetOptions {\n    color: string,\n    colorDrag: string\n    colorDrop: string\n}\n\nexport interface LoggerOptions {\n    enabled?: boolean;\n    debug?: boolean;\n}\n\nexport interface UploadOptions {\n    method?: Method,\n    url: string,\n    httpStrategy?: UploadService\n}\n\n\nexport const NGX_DROP_TARGET_OPTIONS = new InjectionToken('Ngx drop Zone Options');\nexport const NGX_LOGGER_OPTIONS = new InjectionToken('Ngx Logger Options');\nexport const NGX_UPLOAD_OPTIONS = new InjectionToken('Ngx Upload Options');\n\n\nexport const ngxDropTargetOptions: DropTargetOptions = {\n    color: '',\n    colorDrag: '',\n    colorDrop: ''\n};\n\nexport const ngxloggerOptions: LoggerOptions = {\n    enabled: false,\n    debug: true\n};\n\nexport const ngxUploadOptions: UploadOptions = {\n    method: 'POST',\n    url: 'ngx_upload_mock',\n    httpStrategy: XhrUploadService\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerOptions.html":{"url":"interfaces/LoggerOptions.html","title":"interface - LoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/configuration.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        debug\n                                \n                                \n                                        enabled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:18\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:17\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nimport { XhrUploadService } from '../services/xhrUpload.service';\nimport { HttpClientUploadService } from '../services/httpClientUpload.service';\n\nexport type Method = 'POST' | 'GET';\n\nexport type UploadService = typeof XhrUploadService | typeof HttpClientUploadService;\n\nexport interface DropTargetOptions {\n    color: string,\n    colorDrag: string\n    colorDrop: string\n}\n\nexport interface LoggerOptions {\n    enabled?: boolean;\n    debug?: boolean;\n}\n\nexport interface UploadOptions {\n    method?: Method,\n    url: string,\n    httpStrategy?: UploadService\n}\n\n\nexport const NGX_DROP_TARGET_OPTIONS = new InjectionToken('Ngx drop Zone Options');\nexport const NGX_LOGGER_OPTIONS = new InjectionToken('Ngx Logger Options');\nexport const NGX_UPLOAD_OPTIONS = new InjectionToken('Ngx Upload Options');\n\n\nexport const ngxDropTargetOptions: DropTargetOptions = {\n    color: '',\n    colorDrag: '',\n    colorDrop: ''\n};\n\nexport const ngxloggerOptions: LoggerOptions = {\n    enabled: false,\n    debug: true\n};\n\nexport const ngxUploadOptions: UploadOptions = {\n    method: 'POST',\n    url: 'ngx_upload_mock',\n    httpStrategy: XhrUploadService\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadOptions.html":{"url":"interfaces/UploadOptions.html","title":"interface - UploadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/configuration.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        httpStrategy\n                                \n                                \n                                        method\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpStrategy\n                                    \n                                \n                                \n                                    \n                                        httpStrategy:     UploadService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploadService\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:24\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:     Method\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Method\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:22\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/configuration.model.ts:23\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nimport { XhrUploadService } from '../services/xhrUpload.service';\nimport { HttpClientUploadService } from '../services/httpClientUpload.service';\n\nexport type Method = 'POST' | 'GET';\n\nexport type UploadService = typeof XhrUploadService | typeof HttpClientUploadService;\n\nexport interface DropTargetOptions {\n    color: string,\n    colorDrag: string\n    colorDrop: string\n}\n\nexport interface LoggerOptions {\n    enabled?: boolean;\n    debug?: boolean;\n}\n\nexport interface UploadOptions {\n    method?: Method,\n    url: string,\n    httpStrategy?: UploadService\n}\n\n\nexport const NGX_DROP_TARGET_OPTIONS = new InjectionToken('Ngx drop Zone Options');\nexport const NGX_LOGGER_OPTIONS = new InjectionToken('Ngx Logger Options');\nexport const NGX_UPLOAD_OPTIONS = new InjectionToken('Ngx Upload Options');\n\n\nexport const ngxDropTargetOptions: DropTargetOptions = {\n    color: '',\n    colorDrag: '',\n    colorDrop: ''\n};\n\nexport const ngxloggerOptions: LoggerOptions = {\n    enabled: false,\n    debug: true\n};\n\nexport const ngxUploadOptions: UploadOptions = {\n    method: 'POST',\n    url: 'ngx_upload_mock',\n    httpStrategy: XhrUploadService\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _loggerFactory\n                        \n                    \n                \n            \n        \n    \n\n\n    src/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             _loggerFactory\n                        \n                    \n                    \n                        \n    _loggerFactory(options: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Factory associated with internal logger\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      options\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment\n                        \n                        \n                            environment\n                        \n                        \n                            environment\n                        \n                        \n                            environment\n                        \n                        \n                            loggerOptions\n                        \n                        \n                            NGX_DROP_TARGET_OPTIONS\n                        \n                        \n                            NGX_LOGGER_OPTIONS\n                        \n                        \n                            NGX_UPLOAD_OPTIONS\n                        \n                        \n                            ngxDeclarations\n                        \n                        \n                            ngxDropTargetOptions\n                        \n                        \n                            ngxDropTargetOptions\n                        \n                        \n                            ngxloggerOptions\n                        \n                        \n                            ngxUploadOptions\n                        \n                        \n                            noop\n                        \n                        \n                            require\n                        \n                        \n                            testsContext\n                        \n                        \n                            uploadOptions\n                        \n                    \n                \n            \n        \n    \n\n\n    demo/src/environments/environment.prod.ts\n    \n                \n                \n                    \n                        \n                            \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n    \n    \n                \n            \n    \n    demo/src/environments/environment.dev.ts\n    \n                \n                \n                    \n                        \n                            \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n    \n    \n                \n            \n    \n    coverage/src/environments/environment.dev.ts\n    \n                \n                \n                    \n                        \n                            \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n    \n    \n                \n            \n    \n    coverage/src/environments/environment.prod.ts\n    \n                \n                \n                    \n                        \n                            \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n    \n    \n                \n            \n    \n    demo/src/app/app.module.ts\n    \n                \n                \n                    \n                        \n                            \n                             loggerOptions\n                        \n                    \n                    \n                        \n                            loggerOptions:     LoggerOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     LoggerOptions\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngxDropTargetOptions\n                        \n                    \n                    \n                        \n                            ngxDropTargetOptions:     DropTargetOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     DropTargetOptions\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             uploadOptions\n                        \n                    \n                    \n                        \n                            uploadOptions:     UploadOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     UploadOptions\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/utils/configuration.model.ts\n    \n                \n                \n                    \n                        \n                            \n                             NGX_DROP_TARGET_OPTIONS\n                        \n                    \n                    \n                        \n                            NGX_DROP_TARGET_OPTIONS:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             NGX_LOGGER_OPTIONS\n                        \n                    \n                    \n                        \n                            NGX_LOGGER_OPTIONS:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             NGX_UPLOAD_OPTIONS\n                        \n                    \n                    \n                        \n                            NGX_UPLOAD_OPTIONS:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngxDropTargetOptions\n                        \n                    \n                    \n                        \n                            ngxDropTargetOptions:     DropTargetOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     DropTargetOptions\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngxloggerOptions\n                        \n                    \n                    \n                        \n                            ngxloggerOptions:     LoggerOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     LoggerOptions\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngxUploadOptions\n                        \n                    \n                    \n                        \n                            ngxUploadOptions:     UploadOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     UploadOptions\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             ngxDeclarations\n                        \n                    \n                    \n                        \n                            ngxDeclarations:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/utils/logger.model.ts\n    \n                \n                \n                    \n                        \n                            \n                             noop\n                        \n                    \n                    \n                        \n                            noop:     \n    \n                        \n                    \n    \n    \n                \n            \n    \n    karma-shim.ts\n    \n                \n                \n                    \n                        \n                            \n                             require\n                        \n                    \n                    \n                        \n                            require:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             testsContext\n                        \n                    \n                    \n                        \n                            testsContext:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Method\n                        \n                        \n                            UploadService\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/configuration.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            Method\n                        \n                    \n                    \n                        \n                            Method:     \"POST\" | \"GET\"\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            UploadService\n                        \n                    \n                    \n                        \n                            UploadService:      | \n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
